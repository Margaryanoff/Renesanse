{"version":3,"file":"normalizeMeta.js","names":["normalizeMeta","meta","convertMeta","normalizeMetaKeys","Object","keys","reduce","all","key","getMetaKeyAliases","alias","push","escapeHtml","Array","isArray","map","flatten","keyValue","expandArrays","expandObjects"],"sources":["../../lib/meta/normalizeMeta.js"],"sourcesContent":["// import { flatten } from 'lodash-es'\r\nimport flatten from 'lodash/flatten.js'\r\n\r\nimport escapeHtml from '../escapeHtml.js'\r\n\r\nimport expandArrays from './expandArrays.js'\r\nimport expandObjects from './expandObjects.js'\r\n\r\nexport default function normalizeMeta(meta) {\r\n\treturn convertMeta(normalizeMetaKeys(meta))\r\n}\r\n\r\n/**\r\n * Transforms meta object having \"keys\"\r\n * into a meta object having the actual\r\n * `<meta/>` tag `name`s and `property`es.\r\n * @return Array of arrays having shape `[key, value]`.\r\n */\r\nfunction normalizeMetaKeys(meta) {\r\n\treturn Object.keys(meta).reduce((all, key) => {\r\n\t\tfor (const alias of getMetaKeyAliases(key)) {\r\n\t\t\tall.push([alias, meta[key]])\r\n\t\t}\r\n\t\treturn all\r\n\t}, [])\r\n}\r\n\r\n/**\r\n * Gets `<meta/>` property aliases.\r\n * (for both `name` and `property`).\r\n * Also filters out `charset`.\r\n * @return {string}\r\n */\r\nfunction getMetaKeyAliases(key) {\r\n\tswitch (key)\r\n\t{\r\n\t\t// `<meta charset/>` is handled specially\r\n\t\t// because it doesn't have `name` attribute.\r\n\t\tcase 'charset':\r\n\t\t\treturn []\r\n\t\t// `<meta name=\"description\"/>` is an older and\r\n\t\t// more widely supported form than \"og:description\".\r\n\t\t// In practice there's no need to duplicate\r\n\t\t// `<meta name=\"description\"/>` as \"og:description\".\r\n\t\t// Still, to keep it fully-OpenGraph-compliant\r\n\t\t// the description is duplicated as \"og:description\" here.\r\n\t\t// https://indieweb.org/The-Open-Graph-protocol#How_to_set_description\r\n\t\tcase 'description':\r\n\t\t\treturn [key, `og:${key}`]\r\n\t\tcase 'siteName':\r\n\t\t\treturn [`og:site_name`]\r\n\t\tcase 'site_name':\r\n\t\t// `title` property of `meta` object is\r\n\t\t// handled specially via a `<title/>` tag.\r\n\t\t// There would be no need to add `og:title`\r\n\t\t// which duplicates the existing `<title/>`,\r\n\t\t// and `title` property could be discarded here.\r\n\t\t// For example, Facebook falls back to `<title/>` tag.\r\n\t\t// Still, OpenGraph specs formally require an `og:title`.\r\n\t\t// So, to keep it fully-OpenGraph-compliant\r\n\t\t// the title is duplicated as \"og:title\" here.\r\n\t\t// https://indieweb.org/The-Open-Graph-protocol#How_to_set_title\r\n\t\tcase 'title':\r\n\t\t// SVG images are not supported (boo).\r\n\t\t// https://indieweb.org/The-Open-Graph-protocol#How_to_set_image\r\n\t\tcase 'image':\r\n\t\tcase 'locale':\r\n\t\tcase 'type':\r\n\t\tcase 'url':\r\n\t\tcase 'audio':\r\n\t\tcase 'video':\r\n\t\t\treturn [`og:${key}`]\r\n\t\tcase 'locales':\r\n\t\t\treturn ['og:locale:alternate']\r\n\t\tdefault:\r\n\t\t\treturn [escapeHtml(key)]\r\n\t}\r\n}\r\n\r\n// Expands nested objects.\r\n// Expands arrays.\r\n// param meta â€” Either an object or an array of arrays having shape `[key, value]`.\r\n// return An array of arrays having shape `[key, value]`.\r\nexport function convertMeta(meta) {\r\n\t// Convert meta object to an array of arrays having shape `[key, value]`.\r\n\tif (!Array.isArray(meta)) {\r\n\t\tmeta = Object.keys(meta).map(key => [key, meta[key]])\r\n\t}\r\n\treturn flatten(\r\n\t\tmeta.map((keyValue) => {\r\n\t\t\treturn flatten(\r\n\t\t\t\texpandArrays(keyValue)\r\n\t\t\t\t\t.map(expandObjects)\r\n\t\t\t)\r\n\t\t})\r\n\t)\r\n}\r\n"],"mappings":";;;;;;;AACA;AAEA;AAEA;AACA;AAA8C;AAAA;AAAA;AAAA;AAE/B,SAASA,aAAa,CAACC,IAAI,EAAE;EAC3C,OAAOC,WAAW,CAACC,iBAAiB,CAACF,IAAI,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,iBAAiB,CAACF,IAAI,EAAE;EAChC,OAAOG,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG,EAAK;IAAA,2CACzBC,iBAAiB,CAACD,GAAG,CAAC;MAAA;IAAA;MAA1C,oDAA4C;QAAA,IAAjCE,KAAK;QACfH,GAAG,CAACI,IAAI,CAAC,CAACD,KAAK,EAAET,IAAI,CAACO,GAAG,CAAC,CAAC,CAAC;MAC7B;IAAC;MAAA;IAAA;MAAA;IAAA;IACD,OAAOD,GAAG;EACX,CAAC,EAAE,EAAE,CAAC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,iBAAiB,CAACD,GAAG,EAAE;EAC/B,QAAQA,GAAG;IAEV;IACA;IACA,KAAK,SAAS;MACb,OAAO,EAAE;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,aAAa;MACjB,OAAO,CAACA,GAAG,eAAQA,GAAG,EAAG;IAC1B,KAAK,UAAU;MACd,OAAO,gBAAgB;IACxB,KAAK,WAAW;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,OAAO;IACZ;IACA;IACA,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,MAAM;IACX,KAAK,KAAK;IACV,KAAK,OAAO;IACZ,KAAK,OAAO;MACX,OAAO,cAAOA,GAAG,EAAG;IACrB,KAAK,SAAS;MACb,OAAO,CAAC,qBAAqB,CAAC;IAC/B;MACC,OAAO,CAAC,IAAAI,sBAAU,EAACJ,GAAG,CAAC,CAAC;EAAA;AAE3B;;AAEA;AACA;AACA;AACA;AACO,SAASN,WAAW,CAACD,IAAI,EAAE;EACjC;EACA,IAAI,CAACY,KAAK,CAACC,OAAO,CAACb,IAAI,CAAC,EAAE;IACzBA,IAAI,GAAGG,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACc,GAAG,CAAC,UAAAP,GAAG;MAAA,OAAI,CAACA,GAAG,EAAEP,IAAI,CAACO,GAAG,CAAC,CAAC;IAAA,EAAC;EACtD;EACA,OAAO,IAAAQ,mBAAO,EACbf,IAAI,CAACc,GAAG,CAAC,UAACE,QAAQ,EAAK;IACtB,OAAO,IAAAD,mBAAO,EACb,IAAAE,wBAAY,EAACD,QAAQ,CAAC,CACpBF,GAAG,CAACI,yBAAa,CAAC,CACpB;EACF,CAAC,CAAC,CACF;AACF"}