"use strict";

var _applyMeta = _interopRequireDefault(require("./applyMeta.js"));
var _TestDocument = _interopRequireDefault(require("./TestDocument.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
describe("meta", function () {
  it("should update meta", function () {
    var document = new _TestDocument["default"]([['charset', 'win1250'], ['og:locale', 'de'], ['og:locale', 'fr']]);
    (0, _applyMeta["default"])({
      title: 'Test',
      description: 'Testing metadata',
      site_name: 'Testing',
      locale: 'ru',
      locales: ['en', 'fr'],
      viewport: 'width=device-width, initial-scale=1',
      keywords: 'react, redux, webpack',
      author: '@catamphetamine'
    }, document);
    document.getMetaTags().should.deep.equal([['og:locale', 'ru'], ['og:title', 'Test'], ['description', 'Testing metadata'], ['og:description', 'Testing metadata'], ['og:site_name', 'Testing'], ['og:locale:alternate', 'en'], ['og:locale:alternate', 'fr'], ['viewport', 'width=device-width, initial-scale=1'], ['keywords', 'react, redux, webpack'], ['author', '@catamphetamine']]);
    document.getTitle().should.equal('Test');
  });
  it("should transform \"siteName\" to \"site_name\"", function () {
    var document = new _TestDocument["default"]([['charset', 'utf-8'], ['og:locale', 'en']]);
    (0, _applyMeta["default"])({
      siteName: 'Testing'
    }, document);
    document.getMetaTags().should.deep.equal([['og:site_name', 'Testing']]);
  });
  it("should update meta without title and charset", function () {
    var document = new _TestDocument["default"]();
    (0, _applyMeta["default"])({}, document);
    document.getMetaTags().should.deep.equal([]);
    expect(document.getTitle()).to.be.undefined;
  });
  it("should update charset", function () {
    var document = new _TestDocument["default"]([['charset', 'win1250']]);
    (0, _applyMeta["default"])({
      charset: 'utf-8'
    }, document);
    document.getMetaTags().should.deep.equal([['charset', 'utf-8']]);
  });
  it("should skip updating same charset", function () {
    var document = new _TestDocument["default"]([['charset', 'utf-8']]);
    (0, _applyMeta["default"])({
      charset: 'utf-8'
    }, document);
    document.getMetaTags().should.deep.equal([['charset', 'utf-8']]);
  });
});
//# sourceMappingURL=applyMeta.test.js.map