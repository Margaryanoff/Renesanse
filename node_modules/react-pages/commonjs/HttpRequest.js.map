{"version":3,"file":"HttpRequest.js","names":["HttpRequest","method","url","data","options","agent","headers","useCrossDomainCookies","shouldParseJsonDates","onAddCookies","onResponseHeaders","request","withCredentials","query","hasBinaryData","addMultipartData","send","Error","JSON","stringify","set","authTokenHeader","authentication","getAuthToken","getCookie","originalUrl","token","cookies","cookiesToAdd","size","cookieRaw","getCookieKeyAndValue","key","value","Object","keys","length","map","join","progress","on","event","direction","lengthComputable","percent","then","response","statusCode","getResponseData","error","populateErrorDataFromResponse","responseData","status","type","message","html","stack","parse","parseDates","body","text","semicolonIndex","indexOf","slice","trim","split","parameter","HTMLInputElement","files","FileList","i","attach","File","field","isObject","Blob"],"sources":["../lib/HttpRequest.js"],"sourcesContent":["import parseDates from './parseDates.js'\r\nimport isObject from './isObject.js'\r\n\r\n// Performs HTTP requests\r\nexport default class HttpRequest {\r\n\tconstructor(method, url, data, options) {\r\n\t\tconst {\r\n\t\t\tagent,\r\n\t\t\theaders,\r\n\t\t\tuseCrossDomainCookies,\r\n\t\t\tshouldParseJsonDates,\r\n\t\t\tonAddCookies,\r\n\t\t\tonResponseHeaders\r\n\t\t} = options\r\n\r\n\t\tthis.onAddCookies = onAddCookies\r\n\r\n\t\t// Create Http request.\r\n\t\tthis.request = agent[method](url)\r\n\r\n\t\t// By default, an HTTP request won't send or receive cookies\r\n\t\t// when sending a request to another domain (`credentials: \"same-site\"`).\r\n\t\t//\r\n\t\t// To override that behavior, define a `settings.http.useCrossDomainCookies()`\r\n\t\t// function that would return `true` for a certain `url` (or `originalUrl`):\r\n\t\t// it would have the same effect as `credentials: \"include\"` option in `fetch()`\r\n\t\t// and will send and receive cookies when sending a request to another domain.\r\n\t\t// (In an `XMLHttpRequest`, the option is called `withCredentials: true`).\r\n\t\t//\r\n\t\t// Another option is `credentials: \"omit\"` â€” it won't nethier send nor receive cookies.\r\n\t\t//\r\n\t\tif (useCrossDomainCookies) {\r\n\t\t\t// https://github.com/visionmedia/superagent/issues/1172#issue-206075764\r\n\t\t\tthis.request = this.request.withCredentials()\r\n\t\t}\r\n\r\n\t\t// Attach data to the outgoing HTTP request\r\n\t\tif (data) {\r\n\t\t\tswitch (method) {\r\n\t\t\t\tcase 'get':\r\n\t\t\t\t\tthis.request.query(data)\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'post':\r\n\t\t\t\tcase 'put':\r\n\t\t\t\tcase 'patch':\r\n\t\t\t\tcase 'head':\r\n\t\t\t\tcase 'options':\r\n\t\t\t\t\tif (hasBinaryData(data)) {\r\n\t\t\t\t\t\taddMultipartData(this.request, data)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.request.send(data)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tcase 'delete':\r\n\t\t\t\t\tthrow new Error(`\"data\" supplied for HTTP DELETE request: ${JSON.stringify(data)}`)\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Unknown HTTP method: ${method}`)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply HTTP headers\r\n\t\tthis.request.set(headers)\r\n\r\n\t\t// `true`/`false`\r\n\t\tthis.shouldParseJsonDates = shouldParseJsonDates\r\n\r\n\t\t// Can be used for examining HTTP response headers\r\n\t\t// (e.g. Amazon S3 file upload)\r\n\t\tthis.onResponseHeaders = onResponseHeaders\r\n\t}\r\n\r\n\t// Sets `Authorization: Bearer ${token}` in HTTP request header\r\n\taddAuthenticationToken(authTokenHeader, authentication, getAuthToken, getCookie, url, originalUrl) {\r\n\t\tlet token\r\n\t\tif (typeof authentication === 'string') {\r\n\t\t\ttoken = authentication\r\n\t\t} else if (getAuthToken) {\r\n\t\t\ttoken = getAuthToken(getCookie, {\r\n\t\t\t\turl,\r\n\t\t\t\toriginalUrl\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (token && authentication !== false) {\r\n\t\t\tthis.request.set(authTokenHeader || 'Authorization', `Bearer ${token}`)\r\n\t\t}\r\n\t}\r\n\r\n\t// Server side only\r\n\t// (copies user authentication cookies to retain session specific data)\r\n\taddCookies(cookies, cookiesToAdd) {\r\n\t\t// Merge the initial HTTP request `cookies` and `cookiesToAdd` (a `Set`)\r\n\t\tif (cookiesToAdd.size > 0) {\r\n\t\t\tcookies = { ...cookies }\r\n\t\t\tfor (const cookieRaw of cookiesToAdd) {\r\n\t\t\t\tconst [key, value] = getCookieKeyAndValue(cookieRaw)\r\n\t\t\t\tcookies[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Object.keys(cookies).length > 0) {\r\n\t\t\tthis.request.set('cookie', Object.keys(cookies).map(key => `${key}=${cookies[key]}`).join(';'))\r\n\t\t}\r\n\t}\r\n\r\n\t// File upload progress metering\r\n\t// https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\r\n\tprogress(progress) {\r\n\t\tthis.request.on('progress', function(event) {\r\n\t\t\tif (event.direction !== 'upload') {\r\n\t\t\t\t// Only interested in file upload progress metering\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (!event.lengthComputable) {\r\n\t\t\t\t// Unable to compute progress information since the total size is unknown\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tprogress(event.percent, event)\r\n\t\t})\r\n\t}\r\n\r\n\tsend() {\r\n\t\treturn this.request.then(\r\n\t\t\t(response) => {\r\n\t\t\t\tif (this.onResponseHeaders) {\r\n\t\t\t\t\tthis.onResponseHeaders(response.headers)\r\n\t\t\t\t}\r\n\t\t\t\t// (on the server)\r\n\t\t\t\t// If any cookies were set then track them (for later).\r\n\t\t\t\t// `response.headers['set-cookie']` is an array of `String`s.\r\n\t\t\t\tif (response.headers['set-cookie']) {\r\n\t\t\t\t\tthis.onAddCookies(response.headers['set-cookie'])\r\n\t\t\t\t}\r\n\t\t\t\t// If HTTP response status is \"204 - No content\"\r\n\t\t\t\t// (PUT, DELETE) then resolve with an empty result.\r\n\t\t\t\tif (response.statusCode !== 204) {\r\n\t\t\t\t\treturn this.getResponseData(response)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\t// Infer additional `error` properties from the HTTP response.\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\tthis.populateErrorDataFromResponse(error, error.response)\r\n\t\t\t\t}\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tpopulateErrorDataFromResponse(error, response) {\r\n\t\tconst responseData = this.getResponseData(response)\r\n\r\n\t\t// Set `error.status` to HTTP response status code\r\n\t\terror.status = response.statusCode\r\n\r\n\t\tswitch (response.type) {\r\n\t\t\t// Set error `data` from response body,\r\n\t\t\tcase 'application/json':\r\n\t\t\t// http://jsonapi.org/\r\n\t\t\tcase 'application/vnd.api+json':\r\n\t\t\t\terror.data = responseData\r\n\t\t\t\t// Set the more meaningful message for the error (if available)\r\n\t\t\t\tif (error.data.message) {\r\n\t\t\t\t\terror.message = error.data.message\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\r\n\t\t\t// If the HTTP response was not a JSON object,\r\n\t\t\t// but rather a text or an HTML page,\r\n\t\t\t// then include that information in the `error`\r\n\t\t\t// for future reference (e.g. easier debugging).\r\n\r\n\t\t\tcase 'text/plain':\r\n\t\t\t\terror.message = responseData\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'text/html':\r\n\t\t\t\terror.html = responseData\r\n\t\t\t\t// Recover the original error message (if any)\r\n\t\t\t\tif (response.headers['x-error-message']) {\r\n\t\t\t\t\terror.message = response.headers['x-error-message']\r\n\t\t\t\t}\r\n\t\t\t\t// Recover the original error stack trace (if any)\r\n\t\t\t\tif (response.headers['x-error-stack-trace']) {\r\n\t\t\t\t\terror.stack = JSON.parse(response.headers['x-error-stack-trace'])\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tgetResponseData(response) {\r\n\t\tswitch (response.type) {\r\n\t\t\tcase 'application/json':\r\n\t\t\t// http://jsonapi.org/\r\n\t\t\tcase 'application/vnd.api+json':\r\n\t\t\t\tif (this.shouldParseJsonDates) {\r\n\t\t\t\t\treturn parseDates(response.body)\r\n\t\t\t\t}\r\n\t\t\t\treturn response.body\r\n\r\n\t\t\t// case 'text/plain':\r\n\t\t\t// case 'text/html':\r\n\t\t\tdefault:\r\n\t\t\t\treturn response.text\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Returns `[key, value]` from a raw cookie string\r\nexport function getCookieKeyAndValue(cookieRaw) {\r\n\tconst semicolonIndex = cookieRaw.indexOf(';')\r\n\tif (semicolonIndex >= 0) {\r\n\t\tcookieRaw = cookieRaw.slice(0, semicolonIndex)\r\n\t}\r\n\treturn cookieRaw.trim().split('=')\r\n}\r\n\r\nfunction addMultipartData(request, data) {\r\n\tfor (const key of Object.keys(data)) {\r\n\t\tlet parameter = data[key]\r\n\t\t// For an `<input type=\"file\"/>` DOM element just take its `.files`\r\n\t\tif (typeof HTMLInputElement !== 'undefined' && parameter instanceof HTMLInputElement) {\r\n\t\t\tparameter = parameter.files\r\n\t\t}\r\n\t\t// For a `FileList` parameter (e.g. `multiple` file upload),\r\n\t\t// iterate the `File`s in the `FileList`\r\n\t\t// and add them to the form data as a `[File]` array.\r\n\t\tif (typeof FileList !== 'undefined' && parameter instanceof FileList) {\r\n\t\t\tlet i = 0\r\n\t\t\twhile (i < parameter.length) {\r\n\t\t\t\trequest.attach(key, parameter[i])\r\n\t\t\t\ti++\r\n\t\t\t}\r\n\t\t} else if (typeof File !== 'undefined' && parameter instanceof File) {\r\n\t\t\trequest.attach(key, parameter)\r\n\t\t} else {\r\n\t\t\trequest.field(key, parameter)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hasBinaryData(data) {\r\n\tif (!isObject(data)) {\r\n\t\treturn false\r\n\t}\r\n\tfor (const key of Object.keys(data)) {\r\n\t\tconst parameter = data[key]\r\n\t\tif (typeof HTMLInputElement !== 'undefined' && parameter instanceof HTMLInputElement) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (typeof FileList !== 'undefined' && parameter instanceof FileList) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// `File` is a subclass of `Blob`\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Blob\r\n\t\tif (typeof Blob !== 'undefined' && parameter instanceof Blob) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n}"],"mappings":"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"}