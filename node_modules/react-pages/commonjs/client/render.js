"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = render;
var _react = _interopRequireDefault(require("react"));
var _context = require("../context.js");
var _reactRender = _interopRequireWildcard(require("./reactRender.js"));
var _flags = require("./flags.js");
var _excluded = ["element", "rootComponentProps"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// Performs client-side React application rendering.
// Takes `render()` function which renders the actual page.
// Then this rendered page is rendered in a `rootComponent`
// (e.g. Redux state `<Connector/>` and such).
// This function is not exported and is not called directly in an application:
// instead specific implementations call this function
// providing their own `render()` logic
// (e.g. Redux + React-router, React-router).
//
function render(_ref) {
  var render = _ref.render,
    _ref$renderParameters = _ref.renderParameters,
    renderParameters = _ref$renderParameters === void 0 ? {} : _ref$renderParameters,
    rootComponent = _ref.rootComponent;
  var firstRender = true;
  // Renders current React page (inside a `rootComponent`).
  // Returns a Promise for an object holding
  // `render` function for development mode hot reload,
  // and also `store` (if Redux is used).
  if (firstRender) {
    firstRender = false;
  } else {
    (0, _context.setInContext)('Page/HotReloadInProgress', true);
  }
  return render(renderParameters).then(function (_ref2) {
    var element = _ref2.element,
      rootComponentProps = _ref2.rootComponentProps,
      rest = _objectWithoutProperties(_ref2, _excluded);
    // if (locale) {
    // 	rootComponentProps.locale = locale
    // }
    renderReactElementTree(
    // Render page `element` inside a `rootComponent` element.
    // E.g. Redux context `<Provider/>`, and others.
    _react["default"].createElement(rootComponent, rootComponentProps, element),
    // DOM element to which React markup will be rendered
    getReactContainerElement());
    (0, _context.setInContext)('App/HasBeenRendered', true);
    if (!firstRender) {
      (0, _context.clearInContext)('Page/HotReloadInProgress');
    }
    return rest;
  });
}
function renderReactElementTree(element, to) {
  // If using React >= 16 and the content is Server-Side Rendered.
  if ((0, _flags.isServerSideLoaded)() && (0, _flags.isServerSideRendered)()) {
    // An API introduced in React 16
    // for "hydrating" Server-Side Rendered markup.
    // https://reactjs.org/docs/react-dom.html#hydrate
    (0, _reactRender.hydrate)(element, to);
    return;
  }
  // Clears `element` to prevent React warning:
  // "Calling ReactDOM.render() to hydrate server-rendered markup
  //  will stop working in React v17. Replace the ReactDOM.render() call
  //  with ReactDOM.hydrate() if you want React to attach to the server HTML."
  if (!(0, _context.getFromContext)('Page/HotReloadInProgress')) {
    while (to.firstChild) {
      to.removeChild(to.firstChild);
    }
  }
  (0, _reactRender["default"])(element, to);
}

// Retrieves a variable from `window` erasing it.
function getGlobalVariable(name) {
  var variable = window[name];
  if (variable !== undefined) {
    delete window[name];
  }
  return variable;
}
function getReactContainerElement() {
  var element = document.getElementById('react');
  if (!element) {
    var body = document.body;
    if (!body) {
      throw new Error('<body/> tag not found, make sure this script is added to the end of <body/> rather than inside <head/>.');
    }
    element = document.createElement('div');
    element.setAttribute('id', 'react');
    body.appendChild(element);
  }
  return element;
}
//# sourceMappingURL=render.js.map