{"version":3,"file":"usePageStateSelector.js","names":["usePageStateSelector","reducerName","selectorFromReducerState","isLeafRoute","useIsLeafRoute","Error","usePageStateSelectorWithCustomUseSelector","useSelectorForPage","useSelector","createFakeState","state","fakeState","PAGE_STATE_REDUCER_NAME_PREFIX"],"sources":["../../lib/redux/usePageStateSelector.js"],"sourcesContent":["import useSelectorForPage from './useSelectorForPage.js'\r\n\r\nimport { PAGE_STATE_REDUCER_NAME_PREFIX } from './constants.js'\r\n\r\nimport { useIsLeafRoute } from '../router/LeafRouteContext.js'\r\n\r\nexport default function usePageStateSelector(reducerName, selectorFromReducerState) {\r\n\tconst isLeafRoute = useIsLeafRoute()\r\n\tif (!isLeafRoute) {\r\n\t\tthrow new Error('Can only use `usePageStateSelector()` hook inside a \"leaf\" route component')\r\n\t}\r\n\treturn usePageStateSelectorWithCustomUseSelector(reducerName, selectorFromReducerState, useSelectorForPage)\r\n}\r\n\r\nexport function usePageStateSelectorWithCustomUseSelector(reducerName, selectorFromReducerState, useSelector) {\r\n\tconst createFakeState = (state) => {\r\n\t\tconst fakeState = {}\r\n\t\tfakeState[reducerName] = state[PAGE_STATE_REDUCER_NAME_PREFIX + reducerName]\r\n\t\treturn fakeState\r\n\t}\r\n\treturn useSelector(state => selectorFromReducerState(createFakeState(state)))\r\n}"],"mappings":";;;;;;;AAAA;AAEA;AAEA;AAA8D;AAE/C,SAASA,oBAAoB,CAACC,WAAW,EAAEC,wBAAwB,EAAE;EACnF,IAAMC,WAAW,GAAG,IAAAC,gCAAc,GAAE;EACpC,IAAI,CAACD,WAAW,EAAE;IACjB,MAAM,IAAIE,KAAK,CAAC,4EAA4E,CAAC;EAC9F;EACA,OAAOC,yCAAyC,CAACL,WAAW,EAAEC,wBAAwB,EAAEK,8BAAkB,CAAC;AAC5G;AAEO,SAASD,yCAAyC,CAACL,WAAW,EAAEC,wBAAwB,EAAEM,WAAW,EAAE;EAC7G,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAK;IAClC,IAAMC,SAAS,GAAG,CAAC,CAAC;IACpBA,SAAS,CAACV,WAAW,CAAC,GAAGS,KAAK,CAACE,yCAA8B,GAAGX,WAAW,CAAC;IAC5E,OAAOU,SAAS;EACjB,CAAC;EACD,OAAOH,WAAW,CAAC,UAAAE,KAAK;IAAA,OAAIR,wBAAwB,CAACO,eAAe,CAACC,KAAK,CAAC,CAAC;EAAA,EAAC;AAC9E"}