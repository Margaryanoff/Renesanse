{"version":3,"file":"restrictDispatchToPageState.js","names":["restrictDispatchToPageState","dispatch","useSelector","action","stateBefore","state","prevStateKeys","Object","keys","result","stateAfter","newStateKeys","key","REDUCER_NAME","indexOf","PAGE_STATE_REDUCER_NAME_PREFIX","onReduxStateKeyUpdateNotAllowed","Error"],"sources":["../../../lib/redux/load/restrictDispatchToPageState.js"],"sourcesContent":["import { REDUCER_NAME, PAGE_STATE_REDUCER_NAME_PREFIX } from '../constants.js'\r\n\r\n// Detects changes to state when `dispatch()`ing actions from a `.load()` function.\r\n// If there were any, those changes must've been done to \"page state\" parts of the Redux state.\r\n// \"Page state\" parts of the Redux state should be declared in the settings in `pageStateReducerNames` parameter.\r\nexport default function restrictDispatchToPageState(dispatch, { useSelector }) {\r\n\treturn (action) => {\r\n\t\t// Get \"before\" and \"after\" Redux states.\r\n\t\tconst stateBefore = useSelector(state => state)\r\n\t\tconst prevStateKeys = Object.keys(stateBefore)\r\n\t\tconst result = dispatch(action)\r\n\t\tconst stateAfter = useSelector(state => state)\r\n\t\tconst newStateKeys = Object.keys(stateAfter)\r\n\r\n\t\t// Compare the \"before\" and \"after\" Redux states.\r\n\t\tfor (const key of prevStateKeys) {\r\n\t\t\t// Every page implicitly modifies the `pages` reducer, so skip it.\r\n\t\t\tif (key !== REDUCER_NAME) {\r\n\t\t\t\t// If a Redux state key has been modified as a result of `dispatch()`ing the action.\r\n\t\t\t\tif (stateAfter[key] !== stateBefore[key]) {\r\n\t\t\t\t\t// If the modified Redux state key is not declared as \"page state\", show an error.\r\n\t\t\t\t\tif (key.indexOf(PAGE_STATE_REDUCER_NAME_PREFIX) !== 0) {\r\n\t\t\t\t\t\tonReduxStateKeyUpdateNotAllowed(key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return the result of the original `dispatch()` call.\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nfunction onReduxStateKeyUpdateNotAllowed(key) {\r\n\t// setTimeout(() => {\r\n\t\tthrow new Error(`Page loading function dispatched an action that modified \\`${key}\\` part of Redux state. Page loading functions are only allowed to modify the parts of Redux state that've specifically been allowed in \\`pageStateReducerNames: string[]\\` parameter of \\`react-pages\\` settings. Such parts of Redux state could then be accessed only via \\`useSelectorForPageState(reducerName, selectorFromReducerState)\\` or \\`usePageStateSelectorOutsideOfPage(reducerName, selectorFromReducerState)\\``)\r\n\t// }, 0)\r\n}\r\n"],"mappings":";;;;;;AAAA;AAEA;AACA;AACA;AACe,SAASA,2BAA2B,CAACC,QAAQ,QAAmB;EAAA,IAAfC,WAAW,QAAXA,WAAW;EAC1E,OAAO,UAACC,MAAM,EAAK;IAClB;IACA,IAAMC,WAAW,GAAGF,WAAW,CAAC,UAAAG,KAAK;MAAA,OAAIA,KAAK;IAAA,EAAC;IAC/C,IAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC;IAC9C,IAAMK,MAAM,GAAGR,QAAQ,CAACE,MAAM,CAAC;IAC/B,IAAMO,UAAU,GAAGR,WAAW,CAAC,UAAAG,KAAK;MAAA,OAAIA,KAAK;IAAA,EAAC;IAC9C,IAAMM,YAAY,GAAGJ,MAAM,CAACC,IAAI,CAACE,UAAU,CAAC;;IAE5C;IACA,kCAAkBJ,aAAa,oCAAE;MAA5B,IAAMM,GAAG;MACb;MACA,IAAIA,GAAG,KAAKC,uBAAY,EAAE;QACzB;QACA,IAAIH,UAAU,CAACE,GAAG,CAAC,KAAKR,WAAW,CAACQ,GAAG,CAAC,EAAE;UACzC;UACA,IAAIA,GAAG,CAACE,OAAO,CAACC,yCAA8B,CAAC,KAAK,CAAC,EAAE;YACtDC,+BAA+B,CAACJ,GAAG,CAAC;UACrC;QACD;MACD;IACD;;IAEA;IACA,OAAOH,MAAM;EACd,CAAC;AACF;AAEA,SAASO,+BAA+B,CAACJ,GAAG,EAAE;EAC7C;EACC,MAAM,IAAIK,KAAK,qEAA+DL,GAAG,4ZAAka;EACpf;AACD"}