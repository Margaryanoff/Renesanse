{"version":3,"file":"getData.js","names":["getData","routes","routePosition","params","dispatch","getState","codeSplit","server","onError","getLocale","getCookie","context","stash","getReturnResult","getRootRouteComponentProps","props","getFromContext","clearInContext","getLocations","location","previousLocation_","previousLocation","isInitialClientSidePageLoad","undefined","shouldSkipLoadForNavigation","load","routerArgs","getMatchedRoutes","routeIndices","getMatchedRoutesIndices","routeParams","getMatchedRoutesParams","getRouteParams","useSelector","getter","then","result","setRootRouteComponentProps","setPageRouteComponentProps","Error","error","clearNavigationState","RedirectException","url","getLocationUrl","redirect","to","redirectStatusCode","console","state","window","getMatchedLocation","getMatchedLocationThatHasBeenLoaded"],"sources":["../../../lib/redux/load/getData.js"],"sourcesContent":["import getLocationUrl from '../../getLocationUrl.js'\r\n\r\nimport {\r\n\tgetMatchedRoutes,\r\n\tgetMatchedRoutesIndices,\r\n\tgetMatchedRoutesParams,\r\n\tgetRouteParams,\r\n\tgetMatchedLocation,\r\n\tgetMatchedLocationThatHasBeenLoaded,\r\n\tRedirectException\r\n} from '../../router/index.js'\r\n\r\nimport { redirect } from '../../router/actions.js'\r\nimport { clearInContext, getFromContext } from '../../context.js'\r\nimport clearNavigationState from '../../router/clearNavigationState.js'\r\n\r\nimport shouldSkipLoadForNavigation from './shouldSkipLoadForNavigation.js'\r\nimport load from './load.js'\r\n\r\nexport default function getData({\r\n\troutes,\r\n\troutePosition,\r\n\tparams,\r\n\tdispatch,\r\n\tgetState,\r\n\tcodeSplit,\r\n\tserver,\r\n\tonError,\r\n\tgetLocale,\r\n\tgetCookie,\r\n\tcontext,\r\n\tstash\r\n}) {\r\n\tconst getReturnResult = () => {\r\n\t\tif (routePosition === 'root') {\r\n\t\t\t// Don't reset the properties for the root route component\r\n\t\t\t// because the root route component is always the same one\r\n\t\t\t// in any subsequent (non-initial) navigation,\r\n\t\t\t// and it's only being loaded once — at the initial load —\r\n\t\t\t// and any subsequent (non-initial) navigations will return `undefined` from `load()`.\r\n\t\t\tif (stash.getRootRouteComponentProps()) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tprops: stash.getRootRouteComponentProps()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Optionally skip loading data on client side.\r\n\tif (!server) {\r\n\t\tif (\r\n\t\t\tgetFromContext('InitialPage/SkipLoad') ||\r\n\t\t\tgetFromContext('Navigation/SkipLoad') ||\r\n\t\t\tgetFromContext('Page/HotReloadInProgress')\r\n\t\t) {\r\n\t\t\tif (routePosition === 'leaf') {\r\n\t\t\t\t// Reset \"skip `load`\" flag that was previously set\r\n\t\t\t\t// by `pushLocation()` or `replaceLocation()`.\r\n\t\t\t\tclearInContext('Navigation/SkipLoad');\r\n\t\t\t}\r\n\t\t\treturn getReturnResult()\r\n\t\t}\r\n\t}\r\n\r\n\tconst { location, previousLocation: previousLocation_ } = getLocations(getState())\r\n\tconst isInitialClientSidePageLoad = !server && !previousLocation_\r\n\tconst previousLocation = isInitialClientSidePageLoad ? undefined : previousLocation_\r\n\r\n\t// A workaround for `found` router bug:\r\n\t// https://github.com/4Catalyzer/found/issues/239\r\n\t// Prevent executing `load`s on \"anchor\" link click.\r\n\tif (!server && !isInitialClientSidePageLoad) {\r\n\t\tif (shouldSkipLoadForNavigation(previousLocation, location)) {\r\n\t\t\treturn getReturnResult()\r\n\t\t}\r\n\t}\r\n\r\n\t// Execute `load`s.\r\n\treturn load({\r\n\t\tlocation,\r\n\t\tpreviousLocation,\r\n\t\trouterArgs: {\r\n\t\t\troutes: getMatchedRoutes(getState(), routes),\r\n\t\t\trouteIndices: getMatchedRoutesIndices(getState()),\r\n\t\t\trouteParams: getMatchedRoutesParams(getState()),\r\n\t\t\tparams: getRouteParams(getState())\r\n\t\t},\r\n\t\troutePosition,\r\n\t\tcodeSplit,\r\n\t\tserver,\r\n\t\tgetCookie,\r\n\t\tgetLocale,\r\n\t\tcontext,\r\n\t\tdispatch,\r\n\t\tuseSelector: getter => getter(getState())\r\n\t})\r\n\t.then(\r\n\t\t(result) => {\r\n\t\t\t// Anything that gets returned from this `getData()` function\r\n\t\t\t// gets passed to the page component as a `data` property.\r\n\t\t\tswitch (routePosition) {\r\n\t\t\t\tcase 'root':\r\n\t\t\t\t\t// `result` will be undefined for \"root\" route position\r\n\t\t\t\t\t// for any subsequent (non-initial) navigation.\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\tstash.setRootRouteComponentProps(result.props)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Don't reset the properties for the root route component\r\n\t\t\t\t\t\t// because the root route component is always the same one\r\n\t\t\t\t\t\t// in any subsequent (non-initial) navigation,\r\n\t\t\t\t\t\t// and it's only being loaded once — at the initial load —\r\n\t\t\t\t\t\t// and any subsequent (non-initial) navigations will return `undefined` from `load()`.\r\n\t\t\t\t\t\tresult = getReturnResult()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'leaf':\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\tstash.setPageRouteComponentProps(result.props)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Reset the properties for the page route component\r\n\t\t\t\t\t\t// because the page component is now different from the previous one.\r\n\t\t\t\t\t\tstash.setPageRouteComponentProps(undefined)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`[react-pages] Unsupported route position: \"${routePosition}\"`)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t},\r\n\t\t(error) => {\r\n\t\t\t// Clear any navigation-related context info\r\n\t\t\t// because the navigation is cancelled now.\r\n\t\t\tclearNavigationState()\r\n\r\n\t\t\t// Possibly handle the error (for example, redirect to an error page).\r\n\t\t\t//\r\n\t\t\t// The `instanceof RedirectException` check here prevents handling of\r\n\t\t\t// `dispatch(goto())` / `dispatch(redirect())` when those were called\r\n\t\t\t// from `.load()` functions, because when called from `.load()` functions,\r\n\t\t\t// dispatching those two actions throws a `RedirectException`.\r\n\t\t\t//\r\n\t\t\tif (error instanceof RedirectException) {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (onError) {\r\n\t\t\t\t\tonError(error, {\r\n\t\t\t\t\t\tlocation,\r\n\t\t\t\t\t\turl: getLocationUrl(location),\r\n\t\t\t\t\t\t// Using `redirect` instead of `goto` here\r\n\t\t\t\t\t\t// so that the user can't go \"Back\" to the page being loaded\r\n\t\t\t\t\t\t// in case of an error because it would be in inconsistent state\r\n\t\t\t\t\t\t// due to `load` being interrupted.\r\n\t\t\t\t\t\tredirect(to) {\r\n\t\t\t\t\t\t\t// `to` can be a `string`.\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// 307 Temporary Redirect\r\n\t\t\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307\r\n\t\t\t\t\t\t\t// 308 Permanent Redirect\r\n\t\t\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tconst redirectStatusCode = undefined\r\n\t\t\t\t\t\t\tthrow new RedirectException(to, redirectStatusCode)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\tuseSelector: getter => getter(getState()),\r\n\t\t\t\t\t\tserver\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If no `redirect()` was called in `onLoadError()` handler,\r\n\t\t\t\t// it should redirect anyway because the new location wasn't loaded\r\n\t\t\t\t// but the new location's URL is still in the web browser's address bar,\r\n\t\t\t\t// so that URL should be replaced with some other one.\r\n\t\t\t\t// In this case, this is gonna be the previous location's URL.\r\n\t\t\t\tconst redirectStatusCode = undefined\r\n\t\t\t\tthrow new RedirectException(previousLocation, redirectStatusCode)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error instanceof RedirectException) {\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Here it handles any non-redirect errors thrown from `.load()` functions.\r\n\t\t\t\t// If no `redirect()` was called in `onLoadError()` handler,\r\n\t\t\t\t// it should redirect anyway because the new location wasn't loaded\r\n\t\t\t\t// but the new location's URL is still in the web browser's address bar,\r\n\t\t\t\t// so that URL should be replaced with some other one.\r\n\t\t\t\t// In this case, this is gonna be the previous location's URL.\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\tconst redirectStatusCode = undefined\r\n\t\t\t\tthrow new RedirectException(previousLocation, redirectStatusCode)\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n}\r\n\r\nfunction getLocations(state) {\r\n\tconst server = typeof window === 'undefined'\r\n\treturn {\r\n\t\tlocation: getMatchedLocation(state),\r\n\t\tpreviousLocation: (server || !getFromContext('App/HasBeenRendered')) ? undefined : getMatchedLocationThatHasBeenLoaded(state)\r\n\t}\r\n}"],"mappings":"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"}