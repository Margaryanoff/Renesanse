{"version":3,"file":"preload.js","names":["_isEqual","_interopRequireDefault","require","_index","_getRoutePath","_instantNavigation","_chain","_actions","_collect","_excluded","_excluded2","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","PRELOAD_METHOD_NAME","exports","_preload","location","previousLocation","routerArgs","codeSplit","server","getCookie","getLocale","dispatch","getState","isBackOrForwardNavigation","action","delta","_isInstantTransition","isInstantTransition","preloading","previousPreloading","window","__preloading_page","pending","cancelled","cancel","routes","routeParams","routeIndices","params","components","map","_","Component","instrumentDispatch","history","getHistory","concat","createHistoryEntry","preload","_routes","_components","filterByChangedRoutes","_ReactPages_PreviousRoutes","_ReactPages_PreviousRoutes_parameters","preloaders","collectPreloadersFromRoutes","collectPreloadersFromComponents","isInitialClientSidePreload","generatePreloadChain","loadTranslation","collectTranslations","promise","Promise","all","resolve","then","result","setHistory","error","type","PRELOAD_FAILED","event","REDIRECT_ACTION_TYPE","GOTO_ACTION_TYPE","RedirectException","payload","filter","component","normalizeLoad","_ref","load","rest","options","_ref2","filtered","filteredByChangedRoutes","previous_routes","previous_routes_parameters","isEqual","slice","Array","isArray","_ref3","_ReactPages_Navigation_History","_ref4","_ref5","route","getRoutePath","getHistoryAction","index","console","log"],"sources":["../../../lib/redux/preload/preload.js"],"sourcesContent":["// import { isEqual } from 'lodash-es'\r\nimport isEqual from 'lodash/isEqual.js'\r\n\r\nimport {\r\n\tredirect,\r\n\tgoto,\r\n\tREDIRECT_ACTION_TYPE,\r\n\tGOTO_ACTION_TYPE,\r\n\tRedirectException\r\n} from '../../router/index.js'\r\n\r\nimport getRoutePath from '../../router/getRoutePath.js'\r\n\r\nimport { isInstantTransition } from '../client/instantNavigation.js'\r\n\r\nimport generatePreloadChain from './chain.js'\r\n\r\nimport { PRELOAD_FAILED } from './actions.js'\r\n\r\nimport collectTranslations from '../translate/collect.js'\r\n\r\nexport const PRELOAD_METHOD_NAME = 'load'\r\n\r\nexport default function _preload(\r\n\tlocation,\r\n\tpreviousLocation,\r\n\trouterArgs,\r\n\tcodeSplit,\r\n\tserver,\r\n\tgetCookie,\r\n\tgetLocale,\r\n\tdispatch,\r\n\tgetState\r\n) {\r\n\t// If it's a \"Back\"/\"Forward\" navigation\r\n\tconst isBackOrForwardNavigation =\r\n\t\tlocation.action === 'POP' &&\r\n\t\tlocation.delta !== 0 &&\r\n\t\t// During server-side rendering, `action` is \"POP\" and `delta` is `0`.\r\n\t\t!server\r\n\r\n\t// If it's an instant \"Back\"/\"Forward\" navigation\r\n\t// then navigate to the page without loading it.\r\n\t// (has been previously preloaded and is in Redux state)\r\n\tconst _isInstantTransition = isBackOrForwardNavigation &&\r\n\t\tisInstantTransition(previousLocation, location)\r\n\r\n\t// Preload status object.\r\n\t// `preloading` holds the cancellation flag for this navigation process.\r\n\t// (e.g. preloading `Promise` chain could be cancelled in case of a redirect)\r\n\tconst preloading = {}\r\n\r\n\t// Can cancel previous preloading (on the client side)\r\n\tlet previousPreloading\r\n\tif (!server) {\r\n\t\tpreviousPreloading = window.__preloading_page\r\n\t\twindow.__preloading_page = preloading\r\n\t}\r\n\r\n\tif (!server) {\r\n\t\t// If on the client side, then store the current pending navigation,\r\n\t\t// so that it can be cancelled when a new navigation process takes place\r\n\t\t// before the current navigation process finishes.\r\n\t\t//\r\n\t\t// If there's preceeding navigation pending,\r\n\t\t// then cancel that previous navigation.\r\n\t\tif (previousPreloading && previousPreloading.pending && !previousPreloading.cancelled) {\r\n\t\t\tpreviousPreloading.cancel()\r\n\t\t}\r\n\t}\r\n\r\n\tconst { routes, routeParams, routeIndices, params } = routerArgs\r\n\tconst components = routes.map(_ => _.Component)\r\n\r\n\t// Instrument `dispatch`.\r\n\t// `dispatch` for server side `throw`s a special \"redirect error\" on redirect.\r\n\t// `dispatch` for client side cancels current `load` on redirect.\r\n\tdispatch = instrumentDispatch(dispatch, server, preloading)\r\n\r\n\tconst history = getHistory({ server })\r\n\t\t.concat(createHistoryEntry({ routes, location }))\r\n\r\n\t// Preload all the required data for this route (page)\r\n\tlet preload\r\n\tif (!_isInstantTransition) {\r\n\t\tlet _routes = routes\r\n\t\tlet _components = components\r\n\r\n\t\t// Client-side optimization.\r\n\t\t// Skips `load`s for routes that didn't change as a result of navigation.\r\n\t\tif (!server) {\r\n\t\t\tif (codeSplit) {\r\n\t\t\t\t_routes = filterByChangedRoutes(_routes, routeIndices, routeParams)\r\n\t\t\t} else {\r\n\t\t\t\t_components = filterByChangedRoutes(_components, routeIndices, routeParams)\r\n\t\t\t}\r\n\t\t\twindow._ReactPages_PreviousRoutes = routeIndices\r\n\t\t\twindow._ReactPages_PreviousRoutes_parameters = routeParams\r\n\t\t}\r\n\r\n\t\t// Get all `preload` methods on the React-Router component chain\r\n\t\tconst preloaders = codeSplit ? collectPreloadersFromRoutes(_routes) : collectPreloadersFromComponents(_components)\r\n\r\n\t\tconst isInitialClientSidePreload = !server && !previousLocation\r\n\r\n\t\tpreload = generatePreloadChain(\r\n\t\t\tpreloaders,\r\n\t\t\tserver,\r\n\t\t\tisInitialClientSidePreload,\r\n\t\t\tgetState,\r\n\t\t\tdispatch,\r\n\t\t\tlocation,\r\n\t\t\tparams,\r\n\t\t\thistory,\r\n\t\t\tgetCookie,\r\n\t\t\tpreloading\r\n\t\t)\r\n\t}\r\n\r\n\t// Load translations (if any).\r\n\tlet loadTranslation\r\n\tif (getLocale) {\r\n\t\tloadTranslation = collectTranslations(\r\n\t\t\tcomponents,\r\n\t\t\troutes,\r\n\t\t\trouteIndices,\r\n\t\t\tcodeSplit,\r\n\t\t\tgetLocale(getState()),\r\n\t\t\tdispatch\r\n\t\t)\r\n\t}\r\n\r\n\t// Combine promises.\r\n\tlet promise\r\n\tif (preload) {\r\n\t\tif (loadTranslation) {\r\n\t\t\tpromise = Promise.all([preload(), loadTranslation()])\r\n\t\t} else {\r\n\t\t\tpromise = preload()\r\n\t\t}\r\n\t} else if (loadTranslation) {\r\n\t\tpromise = loadTranslation()\r\n\t}\r\n\r\n\t// If nothing to preload, just move to the next middleware\r\n\tif (!promise) {\r\n\t\treturn Promise.resolve()\r\n\t}\r\n\r\n\tpreloading.pending = true\r\n\r\n\t// Preloading process cancellation\r\n\tpreloading.cancel = () => {\r\n\t\tpreloading.cancelled = true\r\n\t\t// If `bluebird` is used,\r\n\t\t// and promise cancellation has been set up,\r\n\t\t// then cancel the `Promise`.\r\n\t\t// http://bluebirdjs.com/docs/api/cancellation.html\r\n\t\tif (promise.cancel) {\r\n\t\t\t// `.catch()` is to suppress \"Uncaught promise rejection\" errors\r\n\t\t\tpromise.catch(() => ({})).cancel()\r\n\t\t}\r\n\t}\r\n\r\n\treturn promise.then(\r\n\t\t// Navigate to the new page\r\n\t\t(result) => {\r\n\t\t\tpreloading.pending = false\r\n\t\t\t// If this navigation process was cancelled\r\n\t\t\t// before `load` finished its work,\r\n\t\t\t// then don't take any further steps on this cancelled navigation.\r\n\t\t\tif (preloading.cancelled) {\r\n\t\t\t\t// Return `false` out of the `Promise`\r\n\t\t\t\t// indicating that the navigation was cancelled.\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tsetHistory(history, { server })\r\n\t\t\treturn result\r\n\t\t},\r\n\t\t(error) => {\r\n\t\t\t// If this navigation process was cancelled\r\n\t\t\t// before `load` finished its work,\r\n\t\t\t// then don't take any further steps on this cancelled navigation.\r\n\t\t\tif (!preloading.cancelled) {\r\n\t\t\t\tif (!server) {\r\n\t\t\t\t\tpreloading.error = error\r\n\t\t\t\t}\r\n\t\t\t\t// Page loading indicator could listen for this event\r\n\t\t\t\tdispatch({ type: PRELOAD_FAILED, error })\r\n\t\t\t}\r\n\t\t\t// Update preload status object\r\n\t\t\tpreloading.pending = false\r\n\t\t\t// May be a server-side special \"redirect\" error.\r\n\t\t\tthrow error\r\n\t\t}\r\n\t)\r\n}\r\n\r\n// Instrument `dispatch`.\r\n// `dispatch` for server side `throw`s a special \"redirect error\" on redirect.\r\n// `dispatch` for client side cancels current `load` on redirect.\r\nfunction instrumentDispatch(dispatch, server, preloading) {\r\n\treturn (event) => {\r\n\t\tswitch (event.type) {\r\n\t\t\t// In case of navigation from `load`.\r\n\t\t\tcase REDIRECT_ACTION_TYPE:\r\n\t\t\tcase GOTO_ACTION_TYPE:\r\n\t\t\t\t// Discard the currently ongoing preloading.\r\n\t\t\t\t// (if some kind of a `bluebird` is used)\r\n\t\t\t\tif (preloading.cancel) {\r\n\t\t\t\t\tpreloading.cancel()\r\n\t\t\t\t}\r\n\t\t\t\t// if (!server && window._ReactPages_Page_SkipDataLoad_on_navigation) {\r\n\t\t\t\t// \tconsole.warn('Looks like you\\'re calling `dispatch(pushLocation())` or `dispatch(replaceLocation())` inside `load`. Call them in `onLoaded()` instead.')\r\n\t\t\t\t// }\r\n\t\t\t\tthrow new RedirectException(event.payload)\r\n\t\t\tdefault:\r\n\t\t\t\t// Proceed normally.\r\n\t\t\t\treturn dispatch(event)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Finds all `preload` (or `preload_deferred`) methods\r\n// (they will be executed in parallel).\r\n//\r\n// @parameter components - matched routes' components.\r\n//\r\n// @returns an array of `component_preloaders`.\r\n// `component_preloaders` is an array of all\r\n// `load`s for a particular React component:\r\n// objects having shape `{ preload(), options }`.\r\n// Therefore the returned value is an array of arrays.\r\n//\r\nexport function collectPreloadersFromComponents(components)\r\n{\r\n\t// Find all static `preload` methods on the route component chain\r\n\treturn components\r\n\t\t// Some wrapper routes can have no `component`.\r\n\t\t// Select all components having `load`s.\r\n\t\t.filter(component => component && component[PRELOAD_METHOD_NAME])\r\n\t\t// Extract `load` functions and their options.\r\n\t\t.map(component => normalizeLoad(component[PRELOAD_METHOD_NAME]).map(({ load, ...rest }) => ({\r\n\t\t\tpreload: load,\r\n\t\t\toptions: rest\r\n\t\t})))\r\n\t\t// // Flatten `load` functions and their options.\r\n\t\t// .reduce((all, preload_and_options) => all.concat(preload_and_options), [])\r\n}\r\n\r\nfunction collectPreloadersFromRoutes(routes) {\r\n\t// Find all preload properties on the route chain.\r\n\treturn routes\r\n\t\t.map(_ => _.load)\r\n\t\t.filter(_ => _)\r\n\t\t.map((load) => {\r\n\t\t\treturn normalizeLoad(load).map(({ load, ...rest }) => ({\r\n\t\t\t\tpreload: load,\r\n\t\t\t\toptions: rest\r\n\t\t\t}))\r\n\t\t})\r\n\t\t// Flatten the array.\r\n\t\t// .reduce((all, preload_and_options) => all.concat(preload_and_options), [])\r\n}\r\n\r\n// A minor optimization for skipping `load`s\r\n// for those parent routes which haven't changed\r\n// as a result of a client-side navigation.\r\n//\r\n// On client side:\r\n//\r\n// Take the previous route components\r\n// (along with their parameters)\r\n// and the next route components\r\n// (along with their parameters),\r\n// and compare them side-by-side\r\n// filtering out the same top level components\r\n// (both having the same component classes\r\n//  and having the same parameters).\r\n//\r\n// Therefore `load`s could be skipped\r\n// for those top level components which remain\r\n// the same (and in the same state).\r\n// This would be an optimization.\r\n//\r\n// (e.g. the main route could be `load`ed only once - on the server side)\r\n//\r\n// At the same time, at least one component should be preloaded:\r\n// even if navigating to the same page it still kinda makes sense to reload it.\r\n// (assuming it's not an \"anchor\" hyperlink navigation)\r\n//\r\n// Also, GET query parameters would also need to be compared, I guess.\r\n// But, I guess, it would make sense to assume that GET parameters\r\n// only affect the last routes component in the chain.\r\n// And, in general, GET query parameters should be avoided,\r\n// but that's not the case for example with search forms.\r\n// So here we assume that GET query parameters only\r\n// influence the last route component in the chain\r\n// which is gonna be reloaded anyway.\r\n//\r\nfunction filterByChangedRoutes(filtered, routes, routeParams)\r\n{\r\n\tlet filteredByChangedRoutes = filtered\r\n\r\n\tif (window._ReactPages_PreviousRoutes)\r\n\t{\r\n\t\tconst previous_routes = window._ReactPages_PreviousRoutes\r\n\t\tconst previous_routes_parameters = window._ReactPages_PreviousRoutes_parameters\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < routes.length - 1 &&\r\n\t\t\tprevious_routes[i] === routes[i] &&\r\n\t\t\tisEqual(previous_routes_parameters[i], routeParams[i]))\r\n\t\t{\r\n\t\t\ti++\r\n\t\t}\r\n\r\n\t\tfilteredByChangedRoutes = filteredByChangedRoutes.slice(i)\r\n\t}\r\n\r\n\treturn filteredByChangedRoutes\r\n}\r\n\r\nfunction normalizeLoad(load) {\r\n\tif (typeof load === 'function') {\r\n\t\tload = { load }\r\n\t}\r\n\tif (!Array.isArray(load)) {\r\n\t\tload = [load]\r\n\t}\r\n\treturn load\r\n}\r\n\r\nfunction getHistory({ server }) {\r\n\tif (server) {\r\n\t\treturn []\r\n\t}\r\n\treturn window._ReactPages_Navigation_History || []\r\n}\r\n\r\nfunction setHistory(history, { server }) {\r\n\tif (server) {\r\n\t\treturn\r\n\t}\r\n\twindow._ReactPages_Navigation_History = history\r\n}\r\n\r\nfunction createHistoryEntry({ routes, location }) {\r\n\treturn {\r\n\t\t// A complete `path` for matched route chain.\r\n\t\t// E.g. \"/user/:userId/post/:postId\"\r\n\t\t// for matched URL \"/user/1/post/123?key=value\".\r\n\t\troute: getRoutePath(routes),\r\n\t\taction: getHistoryAction(location)\r\n\t}\r\n}\r\n\r\nfunction getHistoryAction(location) {\r\n\tif (location.index === 0) {\r\n\t\treturn 'start'\r\n\t} else if (location.action === 'POP') {\r\n\t\treturn location.delta === -1 ? 'back' : 'forward'\r\n\t} else if (location.action === 'PUSH') {\r\n\t\treturn 'push'\r\n\t} else if (location.action === 'REPLACE') {\r\n\t\treturn 'redirect'\r\n\t} else {\r\n\t\tconsole.error('[react-pages] Couldn\\'t get a history entry action for location')\r\n\t\tconsole.log(location)\r\n\t}\r\n}"],"mappings":"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"}