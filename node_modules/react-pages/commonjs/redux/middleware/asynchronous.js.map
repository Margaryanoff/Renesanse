{"version":3,"file":"asynchronous.js","names":["RESULT_ACTION_PROPERTY","ERROR_ACTION_PROPERTY","asynchronousMiddleware","httpClient","reduxEventNaming","server","onError","getErrorData","defaultGetErrorData","DEFAULT_REDUX_EVENT_NAMING","dispatch","getState","next","action","promise","event","events","rest","length","Error","Request","Success","Failure","type","promised","http","then","console","error","Promise","resolve","reject","result","errorHandlerResult","origin","location","getMatchedLocationThatHasBeenLoaded","url","getLocationUrl","redirect","to","goto","useSelector","getter","errorData","isObject","data","status","undefined","message"],"sources":["../../../lib/redux/middleware/asynchronous.js"],"sourcesContent":["import isObject from '../../isObject.js'\r\nimport getLocationUrl from '../../getLocationUrl.js'\r\nimport { getMatchedLocationThatHasBeenLoaded } from '../../router/index.js'\r\nimport { goto } from '../../router/actions.js'\r\nimport { DEFAULT_REDUX_EVENT_NAMING } from '../naming.js'\r\n\r\nexport const RESULT_ACTION_PROPERTY = 'value'\r\nexport const ERROR_ACTION_PROPERTY = 'error'\r\n\r\n// Asynchronous middleware (e.g. for HTTP Ajax calls).\r\n//\r\n// Takes effect only if the `dispatch`ed action has\r\n// `promise` function and `events` (or `event`) property.\r\n//\r\n// `dispatch()` call will return a `Promise`.\r\n//\r\nexport default function asynchronousMiddleware({\r\n\thttpClient,\r\n\treduxEventNaming,\r\n\tserver,\r\n\tonError,\r\n\tgetErrorData = defaultGetErrorData\r\n}) {\r\n\treduxEventNaming = reduxEventNaming || DEFAULT_REDUX_EVENT_NAMING\r\n\r\n\treturn ({ dispatch, getState }) => {\r\n\t\treturn next => action => {\r\n\t\t\tlet {\r\n\t\t\t\tpromise,\r\n\t\t\t\tevent,\r\n\t\t\t\tevents,\r\n\t\t\t\t...rest\r\n\t\t\t} = action\r\n\r\n\t\t\t// If the dispatched action doesn't have a `promise` function property then do nothing\r\n\t\t\tif (typeof promise !== 'function') {\r\n\t\t\t\treturn next(action)\r\n\t\t\t}\r\n\r\n\t\t\t// Generate the three event names automatically based on a base event name\r\n\t\t\tif (!events && typeof event === 'string') {\r\n\t\t\t\tevents = reduxEventNaming(event)\r\n\t\t\t}\r\n\r\n\t\t\t// Validate `events` property\r\n\t\t\tif (!events || events.length !== 3) {\r\n\t\t\t\tthrow new Error(`\"events\" property must be an array of 3 event names: e.g. ['pending', 'success', 'error']`)\r\n\t\t\t}\r\n\r\n\t\t\t// event names\r\n\t\t\tconst [ Request, Success, Failure ] = events\r\n\r\n\t\t\t// dispatch the `pending` event to the Redux store\r\n\t\t\tdispatch({ ...rest, type: Request })\r\n\r\n\t\t\t// Run the asychronous action (e.g. an HTTP request)\r\n\t\t\tconst promised = promise({ http: httpClient })\r\n\r\n\t\t\t// Validate that `promise()` actually returned a `Promise`\r\n\t\t\tif (!promised || typeof promised.then !== 'function') {\r\n\t\t\t\tconsole.error('Redux action\\'s \"promise\" function returned:', promised);\r\n\t\t\t\tthrow new Error('Redux action\\'s \"promise\" function must return a Promise.')\r\n\t\t\t}\r\n\r\n\t\t\t// Returning the result like this,\r\n\t\t\t// because if returned the `promised.then()` chain directly\r\n\t\t\t// then it wouldn't get detected as an \"Unhandled rejection\"\r\n\t\t\t// in case of an error.\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t// Don't `return` this promise\r\n\t\t\t\t// so that it detects it as an \"Unhandled rejection\"\r\n\t\t\t\t// in case of an error.\r\n\t\t\t\tpromised.then(\r\n\t\t\t\t\t// If the Promise resolved\r\n\t\t\t\t\t// (e.g. an HTTP request succeeded)\r\n\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\t// Dispatch the `success` event to the Redux store\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t...rest,\r\n\t\t\t\t\t\t\ttype : Success,\r\n\t\t\t\t\t\t\t[RESULT_ACTION_PROPERTY] : result\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t// Returning the result like this,\r\n\t\t\t\t\t\t// because if returned the `promised.then()` chain directly\r\n\t\t\t\t\t\t// then it wouldn't get detected as an \"Unhandled rejection\"\r\n\t\t\t\t\t\t// in case of an error.\r\n\t\t\t\t\t\tresolve(result)\r\n\r\n\t\t\t\t\t\t// The Promise returned from `dispatch()` call\r\n\t\t\t\t\t\t// is resolved with the `promise` resolved value.\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t},\r\n\t\t\t\t\t// if the Http request failed\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// (Http status !== 20x\r\n\t\t\t\t\t//  or the Http response JSON object has an `error` field)\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\t// Dispatch the `failure` event to the Redux store\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t...rest,\r\n\t\t\t\t\t\t\ttype : Failure,\r\n\t\t\t\t\t\t\t[ERROR_ACTION_PROPERTY] : getErrorData(error)\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t// The Promise returned from `dispatch()` call\r\n\t\t\t\t\t\t// is rejected with this error.\r\n\r\n\t\t\t\t\t\tlet errorHandlerResult\r\n\r\n\t\t\t\t\t\t// Call `onError()` handler for `http` calls not originating from `.load()` functions\r\n\t\t\t\t\t\t// because `.load()` function have their own `onLoadError()` handler.\r\n\t\t\t\t\t\tif (rest.origin !== 'load') {\r\n\t\t\t\t\t\t\tif (onError) {\r\n\t\t\t\t\t\t\t\tconst location = getMatchedLocationThatHasBeenLoaded(getState())\r\n\t\t\t\t\t\t\t\t// If `onError()` returns `true` then the error won't be printed in the console.\r\n\t\t\t\t\t\t\t\terrorHandlerResult = onError(error, {\r\n\t\t\t\t\t\t\t\t\tlocation,\r\n\t\t\t\t\t\t\t\t\turl: getLocationUrl(location),\r\n\t\t\t\t\t\t\t\t\t// Using `goto` instead of `redirect` here\r\n\t\t\t\t\t\t\t\t\t// because it's not part of `load`\r\n\t\t\t\t\t\t\t\t\t// and is therefore part of some kind of an HTTP request\r\n\t\t\t\t\t\t\t\t\t// triggered by user input (e.g. form submission)\r\n\t\t\t\t\t\t\t\t\t// which means it is convenient to be able to\r\n\t\t\t\t\t\t\t\t\t// go \"Back\" to the page on which the error originated.\r\n\t\t\t\t\t\t\t\t\tredirect: to => dispatch(goto(to)),\r\n\t\t\t\t\t\t\t\t\tdispatch,\r\n\t\t\t\t\t\t\t\t\tuseSelector: getter => getter(getState()),\r\n\t\t\t\t\t\t\t\t\tserver\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Return the result (error) as `reject(error)`.\r\n\t\t\t\t\t\t// This is done so that the code could execute a `throw error` statement\r\n\t\t\t\t\t\t// after this line of code.\r\n\t\t\t\t\t\t// Throwing an error via `throw error` would result in an\r\n\t\t\t\t\t\t// \"Unhandled rejection\" error being thrown which would make the error\r\n\t\t\t\t\t\t// obvious to the developer.\r\n\t\t\t\t\t\treject(error)\r\n\r\n\t\t\t\t\t\t// Throw the error via `throw error`.\r\n\t\t\t\t\t\t// Throwing an error via `throw error` would result in an\r\n\t\t\t\t\t\t// \"Unhandled rejection\" error being thrown which would make the error\r\n\t\t\t\t\t\t// obvious to the developer.\r\n\r\n\t\t\t\t\t\t// If an error was handled by the developer, don't throw an \"Unhandled rejection\" error.\r\n\t\t\t\t\t\t// Also don't throw any errors on server side so that the server process doesn't terminate.\r\n\t\t\t\t\t\tif (errorHandlerResult !== true && !server) {\r\n\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Transform Javascript `Error` instance into a plain JSON object\r\n// because the meaning of the `error` action is different\r\n// from what `Error` class is: it should only carry info like\r\n// `status`, `message` and possible other values (e.g. `code`),\r\n// without any stack traces, line numbers, etc.\r\n// I.e. the `error` action should be a plain javascript object,\r\n// not an instance of an `Error` class, because it's Redux (stateless).\r\n//\r\n// Parses a `superagent` `Error` instance\r\n// into a plain JSON object for storing it in Redux state.\r\n// In case of an `application/json` HTTP response\r\n// the `error` instance ha `.data` JSON object property\r\n// which carries the `application/json` HTTP response data.\r\n//\r\nfunction defaultGetErrorData(error)\r\n{\r\n\t// Copies JSON HTTP response entirely\r\n\tconst errorData = isObject(error.data) ? error.data : {}\r\n\r\n\t// Sets HTTP response `status` code\r\n\t// if `status` property wasn't present in JSON HTTP response.\r\n\tif (errorData.status === undefined) {\r\n\t\terrorData.status = error.status\r\n\t}\r\n\r\n\t// Copies `message` from `Error` instance\r\n\t// if `message` property wasn't present in JSON HTTP response.\r\n\tif (!errorData.message) {\r\n\t\terrorData.message = error.message\r\n\t}\r\n\r\n\treturn errorData\r\n}"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElD,IAAMA,sBAAsB,GAAG,OAAO;AAAA;AACtC,IAAMC,qBAAqB,GAAG,OAAO;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACe,SAASC,sBAAsB,OAM3C;EAAA,IALFC,UAAU,QAAVA,UAAU;IACVC,gBAAgB,QAAhBA,gBAAgB;IAChBC,MAAM,QAANA,MAAM;IACNC,OAAO,QAAPA,OAAO;IAAA,yBACPC,YAAY;IAAZA,YAAY,kCAAGC,mBAAmB;EAElCJ,gBAAgB,GAAGA,gBAAgB,IAAIK,kCAA0B;EAEjE,OAAO,iBAA4B;IAAA,IAAzBC,QAAQ,SAARA,QAAQ;MAAEC,QAAQ,SAARA,QAAQ;IAC3B,OAAO,UAAAC,IAAI;MAAA,OAAI,UAAAC,MAAM,EAAI;QACxB,IACCC,OAAO,GAIJD,MAAM,CAJTC,OAAO;UACPC,KAAK,GAGFF,MAAM,CAHTE,KAAK;UACLC,MAAM,GAEHH,MAAM,CAFTG,MAAM;UACHC,IAAI,4BACJJ,MAAM;;QAEV;QACA,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE;UAClC,OAAOF,IAAI,CAACC,MAAM,CAAC;QACpB;;QAEA;QACA,IAAI,CAACG,MAAM,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;UACzCC,MAAM,GAAGZ,gBAAgB,CAACW,KAAK,CAAC;QACjC;;QAEA;QACA,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;UACnC,MAAM,IAAIC,KAAK,+FAA6F;QAC7G;;QAEA;QACA,cAAsCH,MAAM;UAAA;UAApCI,OAAO;UAAEC,OAAO;UAAEC,OAAO;;QAEjC;QACAZ,QAAQ,iCAAMO,IAAI;UAAEM,IAAI,EAAEH;QAAO,GAAG;;QAEpC;QACA,IAAMI,QAAQ,GAAGV,OAAO,CAAC;UAAEW,IAAI,EAAEtB;QAAW,CAAC,CAAC;;QAE9C;QACA,IAAI,CAACqB,QAAQ,IAAI,OAAOA,QAAQ,CAACE,IAAI,KAAK,UAAU,EAAE;UACrDC,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEJ,QAAQ,CAAC;UACvE,MAAM,IAAIL,KAAK,CAAC,2DAA2D,CAAC;QAC7E;;QAEA;QACA;QACA;QACA;QACA,OAAO,IAAIU,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;UACvC;UACA;UACA;UACAP,QAAQ,CAACE,IAAI;UACZ;UACA;UACA,UAACM,MAAM,EAAK;YACX;YACAtB,QAAQ,iCACJO,IAAI;cACPM,IAAI,EAAGF;YAAO,GACbrB,sBAAsB,EAAIgC,MAAM,GAChC;;YAEF;YACA;YACA;YACA;YACAF,OAAO,CAACE,MAAM,CAAC;;YAEf;YACA;YACA,OAAOA,MAAM;UACd,CAAC;UACD;UACA;UACA;UACA;UACA,UAACJ,KAAK,EAAK;YACV;YACAlB,QAAQ,iCACJO,IAAI;cACPM,IAAI,EAAGD;YAAO,GACbrB,qBAAqB,EAAIM,YAAY,CAACqB,KAAK,CAAC,GAC5C;;YAEF;YACA;;YAEA,IAAIK,kBAAkB;;YAEtB;YACA;YACA,IAAIhB,IAAI,CAACiB,MAAM,KAAK,MAAM,EAAE;cAC3B,IAAI5B,OAAO,EAAE;gBACZ,IAAM6B,QAAQ,GAAG,IAAAC,0CAAmC,EAACzB,QAAQ,EAAE,CAAC;gBAChE;gBACAsB,kBAAkB,GAAG3B,OAAO,CAACsB,KAAK,EAAE;kBACnCO,QAAQ,EAARA,QAAQ;kBACRE,GAAG,EAAE,IAAAC,0BAAc,EAACH,QAAQ,CAAC;kBAC7B;kBACA;kBACA;kBACA;kBACA;kBACA;kBACAI,QAAQ,EAAE,kBAAAC,EAAE;oBAAA,OAAI9B,QAAQ,CAAC,IAAA+B,gBAAI,EAACD,EAAE,CAAC,CAAC;kBAAA;kBAClC9B,QAAQ,EAARA,QAAQ;kBACRgC,WAAW,EAAE,qBAAAC,MAAM;oBAAA,OAAIA,MAAM,CAAChC,QAAQ,EAAE,CAAC;kBAAA;kBACzCN,MAAM,EAANA;gBACD,CAAC,CAAC;cACH;YACD;;YAEA;YACA;YACA;YACA;YACA;YACA;YACA0B,MAAM,CAACH,KAAK,CAAC;;YAEb;YACA;YACA;YACA;;YAEA;YACA;YACA,IAAIK,kBAAkB,KAAK,IAAI,IAAI,CAAC5B,MAAM,EAAE;cAC3C,MAAMuB,KAAK;YACZ;UACD,CAAC,CACD;QACF,CAAC,CAAC;MACH,CAAC;IAAA;EACF,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASpB,mBAAmB,CAACoB,KAAK,EAClC;EACC;EACA,IAAMgB,SAAS,GAAG,IAAAC,oBAAQ,EAACjB,KAAK,CAACkB,IAAI,CAAC,GAAGlB,KAAK,CAACkB,IAAI,GAAG,CAAC,CAAC;;EAExD;EACA;EACA,IAAIF,SAAS,CAACG,MAAM,KAAKC,SAAS,EAAE;IACnCJ,SAAS,CAACG,MAAM,GAAGnB,KAAK,CAACmB,MAAM;EAChC;;EAEA;EACA;EACA,IAAI,CAACH,SAAS,CAACK,OAAO,EAAE;IACvBL,SAAS,CAACK,OAAO,GAAGrB,KAAK,CAACqB,OAAO;EAClC;EAEA,OAAOL,SAAS;AACjB"}