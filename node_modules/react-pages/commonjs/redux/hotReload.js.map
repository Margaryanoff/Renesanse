{"version":3,"file":"hotReload.js","names":["ReduxHotReloadFunction","ReduxHotReloadFunctionDelayedRunArgument","startHotReload","store","window","Error","reducers","hotReload","undefined","updateReducers"],"sources":["../../lib/redux/hotReload.js"],"sourcesContent":["let ReduxHotReloadFunction\r\nlet ReduxHotReloadFunctionDelayedRunArgument\r\n\r\nexport function startHotReload({ store }) {\r\n\tif (typeof window === 'undefined') {\r\n\t\tthrow new Error('[react-pages] \"hot reload\" only works in a web browser')\r\n\t}\r\n\t// Updates Redux \"reducers\" and actions.\r\n\tReduxHotReloadFunction = ({ reducers }) => {\r\n\t\t// `store.hotReload()` function is created in `./lib/redux/store.js`.\r\n\t\tstore.hotReload(reducers)\r\n\t}\r\n\t// If if a hot reload has been requested before the page finished rendering.\r\n\tif (ReduxHotReloadFunctionDelayedRunArgument) {\r\n\t\tReduxHotReloadFunction(ReduxHotReloadFunctionDelayedRunArgument)\r\n\t\tReduxHotReloadFunctionDelayedRunArgument = undefined\r\n\t}\r\n}\r\n\r\nexport function updateReducers(reducers) {\r\n\tif (typeof window === 'undefined') {\r\n\t\tthrow new Error('[react-pages] `reducers` could only be updated in a web browser')\r\n\t}\r\n\tif (ReduxHotReloadFunction) {\r\n\t\tReduxHotReloadFunction({ reducers })\r\n\t} else {\r\n\t\tReduxHotReloadFunctionDelayedRunArgument = { reducers }\r\n\t}\r\n}"],"mappings":";;;;;;;AAAA,IAAIA,sBAAsB;AAC1B,IAAIC,wCAAwC;AAErC,SAASC,cAAc,OAAY;EAAA,IAATC,KAAK,QAALA,KAAK;EACrC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;EAC1E;EACA;EACAL,sBAAsB,GAAG,uCAAkB;IAAA,IAAfM,QAAQ,SAARA,QAAQ;IACnC;IACAH,KAAK,CAACI,SAAS,CAACD,QAAQ,CAAC;EAC1B,CAAC;EACD;EACA,IAAIL,wCAAwC,EAAE;IAC7CD,sBAAsB,CAACC,wCAAwC,CAAC;IAChEA,wCAAwC,GAAGO,SAAS;EACrD;AACD;AAEO,SAASC,cAAc,CAACH,QAAQ,EAAE;EACxC,IAAI,OAAOF,MAAM,KAAK,WAAW,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,iEAAiE,CAAC;EACnF;EACA,IAAIL,sBAAsB,EAAE;IAC3BA,sBAAsB,CAAC;MAAEM,QAAQ,EAARA;IAAS,CAAC,CAAC;EACrC,CAAC,MAAM;IACNL,wCAAwC,GAAG;MAAEK,QAAQ,EAARA;IAAS,CAAC;EACxD;AACD"}