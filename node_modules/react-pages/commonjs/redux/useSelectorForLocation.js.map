{"version":3,"file":"useSelectorForLocation.js","names":["useSelectorForLocation","selector","location","useLocation","navigationLocation","useNavigationLocation","value","useSelector","latestValueForThisLocation","useRef","pathname","current"],"sources":["../../lib/redux/useSelectorForLocation.js"],"sourcesContent":["import { useMemo, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport useNavigationLocation from './navigation/useNavigationLocation.js'\r\n\r\nimport useLocation from '../router/useLocation.js'\r\n\r\n// See the `README.md` section on `useSelectorForLocation()` for more details.\r\n// In summary, it is a \"safe\" replacement for `useSelector()` hook\r\n// that should be used to access page-specific data in Redux state.\r\n// It guards against the situations when the user navigates from same page component\r\n// to same page component, resulting in the page-specific state being corrupted\r\n// during the transition period.\r\nexport default function useSelectorForLocation(selector) {\r\n\t// This is a fully-formed location object:\r\n\t// {\r\n\t//   \"action\": \"POP\",\r\n\t//   \"origin\": \"http://localhost:1234\",\r\n\t//   \"protocol\": \"http:\",\r\n\t//   \"host\": \"localhost:1234\",\r\n\t//   \"hostname\": \"localhost\",\r\n\t//   \"port\": \"1234\",\r\n\t//   \"pathname\": \"/a\",\r\n\t//   \"search\": \"\",\r\n\t//   \"hash\": \"\",\r\n\t//   \"key\": \"wcyrb4:0\",\r\n\t//   \"index\": 1,\r\n\t//   \"delta\": 0,\r\n\t//   \"query\": {}\r\n\t// }\r\n\tconst location = useLocation()\r\n\r\n\t// This is an object of a very simplistic shape:\r\n\t// { pathname: '/a', search: '', hash: '' }\r\n\t// I.e. it doesn't have any propeties of a `normal` location:\r\n\t// `action: \"POP\"`, `key: \"wcyrb4:0\"`, etc.\r\n\tconst navigationLocation = useNavigationLocation()\r\n\r\n\tconst value = useSelector(selector)\r\n\r\n\tconst latestValueForThisLocation = useRef()\r\n\tif (location.pathname === navigationLocation.pathname) {\r\n\t\tlatestValueForThisLocation.current = value\r\n\t}\r\n\r\n\treturn latestValueForThisLocation.current\r\n}"],"mappings":";;;;;;AAAA;AACA;AAEA;AAEA;AAAkD;AAElD;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,sBAAsB,CAACC,QAAQ,EAAE;EACxD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMC,QAAQ,GAAG,IAAAC,uBAAW,GAAE;;EAE9B;EACA;EACA;EACA;EACA,IAAMC,kBAAkB,GAAG,IAAAC,iCAAqB,GAAE;EAElD,IAAMC,KAAK,GAAG,IAAAC,uBAAW,EAACN,QAAQ,CAAC;EAEnC,IAAMO,0BAA0B,GAAG,IAAAC,aAAM,GAAE;EAC3C,IAAIP,QAAQ,CAACQ,QAAQ,KAAKN,kBAAkB,CAACM,QAAQ,EAAE;IACtDF,0BAA0B,CAACG,OAAO,GAAGL,KAAK;EAC3C;EAEA,OAAOE,0BAA0B,CAACG,OAAO;AAC1C"}