{"version":3,"file":"hideInitialLoad.js","names":["hideInitialLoad","onHideListeners","onHideListener","isHidden","current","clearTimeout","showTimer","undefined"],"sources":["../../../../lib/redux/client/initialLoad/hideInitialLoad.js"],"sourcesContent":["import { onHideListeners, isHidden, showTimer } from './showInitialLoad.js'\r\n\r\n// In cases when the initial page immediately redirects\r\n// to another page (for example, to a \"not found\" page),\r\n// a `RedirectException` is thrown in `setUpAndRender()` function\r\n// in which case that function re-runs from scratch.\r\n//\r\n// That would result in `showInitialLoad()` function\r\n// getting called multiple times, resulting in it creating\r\n// multiple `<InitialLoadingContainer/>` DOM Elements.\r\n//\r\n// Therefore, when calling `hideInitialLoad()`,\r\n// it should assume there're multiple initial `load`s on a page.\r\n\r\n// let containers = []\r\n// let refs = []\r\n\r\nexport default function hideInitialLoad() {\r\n\t// const container = containers.pop()\r\n\t// const ref = refs.pop()\r\n\r\n\t// ref.setFinishedLoading(() => {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tReactDOM.unmountComponentAtNode(container)\r\n\t// \t\tdocument.body.removeChild(container)\r\n\t// \t}, 160)\r\n\t// })\r\n\r\n\tfor (const onHideListener of onHideListeners) {\r\n\t\tonHideListener()\r\n\t}\r\n\r\n\tisHidden.current = true\r\n\r\n\tclearTimeout(showTimer.current)\r\n\tshowTimer.current = undefined\r\n}"],"mappings":";;;;;;AAAA;AAA2E;AAAA;AAAA;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,SAASA,eAAe,GAAG;EACzC;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAAA,2CAE6BC,gCAAe;IAAA;EAAA;IAA5C,oDAA8C;MAAA,IAAnCC,cAAc;MACxBA,cAAc,EAAE;IACjB;EAAC;IAAA;EAAA;IAAA;EAAA;EAEDC,yBAAQ,CAACC,OAAO,GAAG,IAAI;EAEvBC,YAAY,CAACC,0BAAS,CAACF,OAAO,CAAC;EAC/BE,0BAAS,CAACF,OAAO,GAAGG,SAAS;AAC9B"}