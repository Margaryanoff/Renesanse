"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onFoundRouterReady = onFoundRouterReady;
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var foundRouterIsReady = false;
var onFoundRouterReadyListeners = [];

// Fixes a bug when `found` ignores all navigation actions until its `componentDidMount()` is called.
//
// The code here is the first half of the workaround.
// The second half of the workaround is the added code in `found`'s `src/createBaseRouter.tsx` file:
//
// componentDidMount() {
//   if (typeof window !== 'undefined') {
//     if (window.onFoundRouterIsReady) {
//       window.onFoundRouterIsReady()
//     }
//   }
// }
//
// https://github.com/catamphetamine/found/commit/be416e3bc0715207f861fb5466ed666e9d7c016c
//
if (typeof window !== 'undefined') {
  window.onFoundRouterIsReady = function () {
    if (!foundRouterIsReady) {
      foundRouterIsReady = true;
      var _iterator = _createForOfIteratorHelper(onFoundRouterReadyListeners),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var onFoundRouterReadyListener = _step.value;
          onFoundRouterReadyListener();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  };
}
function onFoundRouterReady(listener) {
  if (foundRouterIsReady) {
    return listener();
  } else {
    return new Promise(function (resolve) {
      onFoundRouterReadyListeners.push(function () {
        return resolve(listener());
      });
    });
  }
}
//# sourceMappingURL=router.js.map