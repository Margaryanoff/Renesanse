{"version":3,"file":"useSelectorForPage.js","names":["useSelectorForPage","selector","location","useLocation","navigationLocation","useNavigationLocation","value","useSelector","latestValueForThisLocation","useRef","isSamePage","current"],"sources":["../../lib/redux/useSelectorForPage.js"],"sourcesContent":["import { useMemo, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport useNavigationLocation from './navigation/useNavigationLocation.js'\r\n\r\nimport useLocation from '../router/useLocation.js'\r\nimport isSamePage from '../isSamePage.js'\r\n\r\n// `useSelectorForPage()` is a \"safe\" replacement for `useSelector()` hook\r\n// that should be used to access page-specific data in Redux state.\r\n// It guards against the situations when the user navigates from same page component\r\n// to same page component, resulting in the page-specific state being corrupted\r\n// during the transition period.\r\n//\r\n// The concept of a \"page\" is: a \"page\" is something within a certain pathname.\r\n// I.e. changing URL query parameters or \"hash\" isn't considered \"going to another page\",\r\n// even though the URL value in the address bar changes in those cases.\r\n// Only changing URL query `pathname` is considered \"going to another page\".\r\n//\r\n// See the comments in `isSamePage.js` file for the rationale on defining a \"page\" that way.\r\n//\r\nexport default function useSelectorForPage(selector) {\r\n\t// This is a fully-formed location object:\r\n\t// {\r\n\t//   \"action\": \"POP\",\r\n\t//   \"origin\": \"http://localhost:1234\",\r\n\t//   \"protocol\": \"http:\",\r\n\t//   \"host\": \"localhost:1234\",\r\n\t//   \"hostname\": \"localhost\",\r\n\t//   \"port\": \"1234\",\r\n\t//   \"pathname\": \"/a\",\r\n\t//   \"search\": \"\",\r\n\t//   \"hash\": \"\",\r\n\t//   \"key\": \"wcyrb4:0\",\r\n\t//   \"index\": 1,\r\n\t//   \"delta\": 0,\r\n\t//   \"query\": {}\r\n\t// }\r\n\tconst location = useLocation()\r\n\r\n\t// `navigationLocation` object has the same shape as the `location` object above.\r\n\tconst navigationLocation = useNavigationLocation()\r\n\r\n\tconst value = useSelector(selector)\r\n\r\n\tconst latestValueForThisLocation = useRef()\r\n\tif (isSamePage(location, navigationLocation)) {\r\n\t\tlatestValueForThisLocation.current = value\r\n\t}\r\n\r\n\treturn latestValueForThisLocation.current\r\n}"],"mappings":";;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAAyC;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,kBAAkB,CAACC,QAAQ,EAAE;EACpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMC,QAAQ,GAAG,IAAAC,uBAAW,GAAE;;EAE9B;EACA,IAAMC,kBAAkB,GAAG,IAAAC,iCAAqB,GAAE;EAElD,IAAMC,KAAK,GAAG,IAAAC,uBAAW,EAACN,QAAQ,CAAC;EAEnC,IAAMO,0BAA0B,GAAG,IAAAC,aAAM,GAAE;EAC3C,IAAI,IAAAC,sBAAU,EAACR,QAAQ,EAAEE,kBAAkB,CAAC,EAAE;IAC7CI,0BAA0B,CAACG,OAAO,GAAGL,KAAK;EAC3C;EAEA,OAAOE,0BAA0B,CAACG,OAAO;AAC1C"}