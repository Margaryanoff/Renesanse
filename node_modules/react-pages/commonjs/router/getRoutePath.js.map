{"version":3,"file":"getRoutePath.js","names":["getRoutePath","routes","filter","route","path","map","replace","join"],"sources":["../../lib/router/getRoutePath.js"],"sourcesContent":["// Returns a complete `path` for matched route chain.\r\n// E.g. returns \"/user/:userId/post/:postId\"\r\n// for matched URL \"/user/1/post/123?key=value\".\r\nexport default function getRoutePath(routes)\r\n{\r\n\treturn routes\r\n\t\t// Select routes having `path` React property set.\r\n\t\t.filter(route => route.path)\r\n\t\t// Trim leading or trailing slashes (`/`)\r\n\t\t// from each route `path` React property.\r\n\t\t// There can be leading or trailing slashes\r\n\t\t// because there're no such restrictions\r\n\t\t// when a developer defines a route's `path`:\r\n\t\t// the `found` router library normalizes those `path`s.\r\n\t\t.map(route => route.path.replace(/^\\//, '').replace(/\\/$/, ''))\r\n\t\t// // Replace parameters: \"/a/:param/b\" â†’ \"/a/{param}/b\".\r\n\t\t// .map(routePart => routePart.replace(/:([^\\/]+)/g, '{$1}')\r\n\t\t// Join route `path`s with slashes (`/`).\r\n\t\t.join('/') || '/'\r\n}"],"mappings":";;;;;;AAAA;AACA;AACA;AACe,SAASA,YAAY,CAACC,MAAM,EAC3C;EACC,OAAOA;EACN;EAAA,CACCC,MAAM,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,IAAI;EAAA;EAC3B;EACA;EACA;EACA;EACA;EACA;EAAA,CACCC,GAAG,CAAC,UAAAF,KAAK;IAAA,OAAIA,KAAK,CAACC,IAAI,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAAA;EAC9D;EACA;EACA;EAAA,CACCC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG;AACnB"}