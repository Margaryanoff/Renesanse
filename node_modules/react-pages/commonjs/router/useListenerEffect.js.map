{"version":3,"file":"useListenerEffect.js","names":["useListenerEffect","key","contextKey","listener","useEffect","console","log","addListener","removeListener","getFromContext","setInContext","concat","filter","_"],"sources":["../../lib/router/useListenerEffect.js"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nimport { setInContext, getFromContext } from '../context.js'\r\n\r\nexport default function useListenerEffect({ contextKey: key, listener }) {\r\n\tuseEffect(() => {\r\n\t\tconsole.log('@@@@@@@@@@ add listener', key, listener)\r\n\t\taddListener(key, listener)\r\n\t\treturn () => {\r\n\t\t\tremoveListener(key, listener)\r\n\t\t}\r\n\t}, [])\r\n}\r\n\r\nconst addListener = (key, listener) => {\r\n\tif (!getFromContext(key)) {\r\n\t\tsetInContext(key, [])\r\n\t}\r\n\tsetInContext(key, getFromContext(key).concat([listener]))\r\n}\r\n\r\nconst removeListener = (key, listener) => {\r\n\tif (getFromContext(key)) {\r\n\t\tsetInContext(key, getFromContext(key).filter(_ => _ !== listener))\r\n\t}\r\n}"],"mappings":";;;;;;AAAA;AAEA;AAEe,SAASA,iBAAiB,OAAgC;EAAA,IAAjBC,GAAG,QAAfC,UAAU;IAAOC,QAAQ,QAARA,QAAQ;EACpE,IAAAC,gBAAS,EAAC,YAAM;IACfC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,GAAG,EAAEE,QAAQ,CAAC;IACrDI,WAAW,CAACN,GAAG,EAAEE,QAAQ,CAAC;IAC1B,OAAO,YAAM;MACZK,cAAc,CAACP,GAAG,EAAEE,QAAQ,CAAC;IAC9B,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;AACP;AAEA,IAAMI,WAAW,GAAG,SAAdA,WAAW,CAAIN,GAAG,EAAEE,QAAQ,EAAK;EACtC,IAAI,CAAC,IAAAM,uBAAc,EAACR,GAAG,CAAC,EAAE;IACzB,IAAAS,qBAAY,EAACT,GAAG,EAAE,EAAE,CAAC;EACtB;EACA,IAAAS,qBAAY,EAACT,GAAG,EAAE,IAAAQ,uBAAc,EAACR,GAAG,CAAC,CAACU,MAAM,CAAC,CAACR,QAAQ,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED,IAAMK,cAAc,GAAG,SAAjBA,cAAc,CAAIP,GAAG,EAAEE,QAAQ,EAAK;EACzC,IAAI,IAAAM,uBAAc,EAACR,GAAG,CAAC,EAAE;IACxB,IAAAS,qBAAY,EAACT,GAAG,EAAE,IAAAQ,uBAAc,EAACR,GAAG,CAAC,CAACW,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,KAAKV,QAAQ;IAAA,EAAC,CAAC;EACnE;AACD,CAAC"}