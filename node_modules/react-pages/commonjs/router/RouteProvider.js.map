{"version":3,"file":"RouteProvider.js","names":["RouteProvider","location","routes","params","children","getRoute","path","getRoutePath","initialRoute","useMemo","currentRoute","useRef","currentRouteInstantBack","currentRouteNavigationContext","undefined","console","log","current","route","instantBack","getFromContext","navigationContext","beforeRenderNewPageListeners","takeFromContext","listener","currentRouteValue","currentRouteInstantBackValue","currentRouteNavigationContextValue","currentRoutePrev","useEffect","isInitialPageLoad","afterNavigatedToAnotherPageListeners","afterNavigatedToThisPageListeners","afterRenderedNewPageListeners","React","createElement","RouteContext","Provider","value","routeShape","PropTypes","string","arrayOf","shape","routeType","propTypes","origin","host","hostname","port","protocol","pathname","isRequired","query","objectOf","search","hash","key","state","any","index","number","delta","action","oneOf","node"],"sources":["../../lib/router/RouteProvider.js"],"sourcesContent":["import React, { useRef, useMemo, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport getRoutePath from './getRoutePath.js'\r\n\r\nimport RouteContext from './RouteContext.js'\r\n\r\nimport { getFromContext, takeFromContext } from '../context.js'\r\n\r\nexport default function RouteProvider({\r\n\tlocation,\r\n\troutes,\r\n\tparams,\r\n\tchildren\r\n}) {\r\n\tconst getRoute = () => ({\r\n\t\tlocation,\r\n\t\tparams,\r\n\t\tpath: getRoutePath(routes)\r\n\t})\r\n\r\n\tconst initialRoute = useMemo(() => getRoute(), [])\r\n\r\n\tconst currentRoute = useRef(initialRoute)\r\n\tconst currentRouteInstantBack = useRef(false)\r\n\tconst currentRouteNavigationContext = useRef(undefined)\r\n\r\n\tconsole.log('$$$$$$$$$$$$$$$$$$$$$$$$$$ <RouteProvider/>')\r\n\tconsole.log('$$$$ location', location)\r\n\r\n\t// `location` is `undefined` when router starts loading the next page.\r\n\t// In that case, the previous page is still rendered, so `currentRoute`\r\n\t// shouldn't change.\r\n\tif (location) {\r\n\t\tif (location !== currentRoute.current.location) {\r\n\t\t\tconst route = getRoute()\r\n\r\n\t\t\t// \"Navigation/IsInstantBack\" and \"Navigation/Context\" values that're later used in `useEffect()`\r\n\t\t\t// should be snapshotted at this state â€” at the same stage that the \"new page\" route is snapshotted.\r\n\t\t\t// Otherwise, those values might potentially correspond to some other navigation (subsequent)\r\n\t\t\t// that happens right after this (current) navigation.\r\n\t\t\tconst instantBack = getFromContext('Navigation/IsInstantBack')\r\n\t\t\tconst navigationContext = getFromContext('Navigation/Context')\r\n\r\n\t\t\t// Store the snapshotted values in `ref`s.\r\n\t\t\tcurrentRoute.current = route\r\n\t\t\tcurrentRouteInstantBack.current = instantBack\r\n\t\t\tcurrentRouteNavigationContext.current = navigationContext\r\n\r\n\t\t\t// Trigger \"before new page will be rendered\" listeners.\r\n\t\t\tconst beforeRenderNewPageListeners = takeFromContext('Navigation/BeforeRenderNewPage')\r\n\t\t\tif (beforeRenderNewPageListeners) {\r\n\t\t\t\tfor (const listener of beforeRenderNewPageListeners) {\r\n\t\t\t\t\tlistener({\r\n\t\t\t\t\t\tlocation: route.location,\r\n\t\t\t\t\t\troute: route.path,\r\n\t\t\t\t\t\tparams: route.params,\r\n\t\t\t\t\t\tinstantBack,\r\n\t\t\t\t\t\tnavigationContext\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// `currentRouteValue` variable is created here to store `currentRoute.current` `ref` value.\r\n\t// The reason is that the `ref` value, when referenced from `useEffect()` callback,\r\n\t// will always point to the very latest value in that `ref` at not to the `ref` value\r\n\t// that existed at the time of comparing the dependencies of the effect.\r\n\t// In other words, `ref` value inside effect callback might go out of sync with\r\n\t// itself at the time of evaluating the effect's dependencies.\r\n\t//\r\n\t// Using a variable allows \"capturing\" the `ref` value at a certain point in time\r\n\t// and then use that value later when the effect's callback function is run.\r\n\t// This is called \"closure\" in javascript language.\r\n\t//\r\n\t// For example, user navigates from `/items` to `/items/123` and \"new page\" event\r\n\t// is registered here, and `useEffect()` is ready to be run but the user quickly\r\n\t// navigates to `/contacts` page and all the `ref`s now store the values for that\r\n\t// `/contacts` page and not for the `/items/123` page, so the `useEffect()` callback\r\n\t// shouldn't read any values from those `ref`s since those `ref` values may have\r\n\t// already been overwritten.\r\n\t//\r\n\tconst currentRouteValue = currentRoute.current\r\n\tconst currentRouteInstantBackValue = currentRouteInstantBack.current\r\n\tconst currentRouteNavigationContextValue = currentRouteNavigationContext.current\r\n\r\n\t// This variable prevents the effect from triggering multiple times for same page.\r\n\t// I.e. the effect would only run on the actual change vs randomly.\r\n\t//\r\n\t// The `ref` is initialized with `undefined` rather than `currentRoute.current`.\r\n\t// That is to trigger `useEffect()` below at the initial page render.\r\n\t//\r\n\tconst currentRoutePrev = useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\t// When a new location (page) has been rendered.\r\n\t\tif (currentRouteValue !== currentRoutePrev.current) {\r\n\t\t\tconst isInitialPageLoad = !currentRoutePrev.current\r\n\r\n\t\t\t// Mark this new location (page) as \"effect already triggered\".\r\n\t\t\tcurrentRoutePrev.current = currentRouteValue\r\n\r\n\t\t\t// This shouldn't be run on the initial render.\r\n\t\t\tconsole.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ hasRouteChanged')\r\n\r\n\t\t\t// Trigger navigation end listeners (for previous page).\r\n\t\t\tconst afterNavigatedToAnotherPageListeners = takeFromContext('Navigation/AfterNavigatedToAnotherPage')\r\n\t\t\tif (afterNavigatedToAnotherPageListeners) {\r\n\t\t\t\tif (isInitialPageLoad) {\r\n\t\t\t\t\tfor (const listener of afterNavigatedToAnotherPageListeners) {\r\n\t\t\t\t\t\tlistener({\r\n\t\t\t\t\t\t\tlocation: currentRouteValue.location,\r\n\t\t\t\t\t\t\troute: currentRouteValue.path,\r\n\t\t\t\t\t\t\tparams: currentRouteValue.params,\r\n\t\t\t\t\t\t\tinstantBack: currentRouteInstantBackValue,\r\n\t\t\t\t\t\t\tnavigationContext: currentRouteNavigationContextValue\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Trigger navigation end listeners (for new page).\r\n\t\t\tconst afterNavigatedToThisPageListeners = takeFromContext('Navigation/AfterNavigatedToThisPage')\r\n\t\t\tif (afterNavigatedToThisPageListeners) {\r\n\t\t\t\tfor (const listener of afterNavigatedToThisPageListeners) {\r\n\t\t\t\t\tlistener({\r\n\t\t\t\t\t\tlocation: currentRouteValue.location,\r\n\t\t\t\t\t\troute: currentRouteValue.path,\r\n\t\t\t\t\t\tparams: currentRouteValue.params,\r\n\t\t\t\t\t\tinstantBack: currentRouteInstantBackValue,\r\n\t\t\t\t\t\tnavigationContext: currentRouteNavigationContextValue\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Trigger \"after new page has been rendered\" listeners.\r\n\t\t\tconst afterRenderedNewPageListeners = takeFromContext('Navigation/AfterRenderedNewPage')\r\n\t\t\tif (afterRenderedNewPageListeners) {\r\n\t\t\t\tfor (const listener of afterRenderedNewPageListeners) {\r\n\t\t\t\t\tlistener({\r\n\t\t\t\t\t\tlocation: currentRouteValue.location,\r\n\t\t\t\t\t\troute: currentRouteValue.path,\r\n\t\t\t\t\t\tparams: currentRouteValue.params,\r\n\t\t\t\t\t\tinstantBack: currentRouteInstantBackValue,\r\n\t\t\t\t\t\tnavigationContext: currentRouteNavigationContextValue\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [currentRouteValue])\r\n\r\n\treturn React.createElement(\r\n\t\tRouteContext.Provider,\r\n\t\t{ value: currentRouteValue },\r\n\t\tchildren\r\n\t)\r\n}\r\n\r\nconst routeShape = {\r\n\t// A `route` doesn't always have a `path` property:\r\n\t// `found` router allows that when nesting routes.\r\n\t// Example: `{ Component: Wrapper, children: { path: '/', Component: Home } }`.\r\n\tpath: PropTypes.string\r\n}\r\n\r\nrouteShape.children = PropTypes.arrayOf(PropTypes.shape(routeShape))\r\n\r\nconst routeType = PropTypes.shape(routeShape)\r\n\r\nRouteProvider.propTypes = {\r\n\tlocation: PropTypes.shape({\r\n\t\torigin: PropTypes.string,\r\n\t\thost: PropTypes.string,\r\n\t\thostname: PropTypes.string,\r\n\t\tport: PropTypes.string,\r\n\t\tprotocol: PropTypes.string,\r\n\r\n\t\tpathname: PropTypes.string.isRequired,\r\n\t\tquery: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\t\tsearch: PropTypes.string.isRequired,\r\n\t\thash: PropTypes.string.isRequired,\r\n\r\n\t\t// Miscellaneous (not used).\r\n\r\n\t\t// Some kind of a possibly-likely-unique key. Is empty for the initial page.\r\n\t\tkey: PropTypes.string,\r\n\r\n\t\t// History entry state. Can be empty.\r\n\t\tstate: PropTypes.any,\r\n\r\n\t\t// Index in browser history stack.\r\n\t\t// Seems to be `undefined` during the initial client-side render\r\n\t\t// after the page has been rendered on the server side.\r\n\t\tindex: PropTypes.number,\r\n\r\n\t\t// The \"delta\" in terms of `index` change as a result of the navigation.\r\n\t\t// For example, a regular hyperlink click is `delta: 1`.\r\n\t\t// A \"Back\" action is `delta: -1`. A user could go several pages \"Back\".\r\n\t\tdelta: PropTypes.number,\r\n\r\n\t\t// 'PUSH' or 'REPLACE' if the location was reached via history \"push\" or\r\n    // \"replace\" action respectively. 'POP' on the initial location, or if\r\n\t\t// the location was reached via the browser \"Back\" or \"Forward\" buttons\r\n\t\t// or via `FarceActions.go`.\r\n\t\taction: PropTypes.oneOf(['PUSH', 'REPLACE', 'POP']).isRequired\r\n\t}),\r\n\r\n\troutes: PropTypes.arrayOf(routeType),\r\n\r\n\tparams: PropTypes.objectOf(PropTypes.string),\r\n\r\n\tchildren: PropTypes.node\r\n}"],"mappings":"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"}