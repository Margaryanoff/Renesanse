{"version":3,"file":"useNavigationListenerEffect.js","names":["useNavigationListenerEffect","key","contextKey","listener","useEffect","addListener","removeListener","getFromContext","setInContext","existingListeners","indexOf","concat","filter","_"],"sources":["../../lib/router/useNavigationListenerEffect.js"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nimport { setInContext, getFromContext } from '../context.js'\r\n\r\nexport default function useNavigationListenerEffect({\r\n\tcontextKey: key,\r\n\tlistener\r\n}) {\r\n\tuseEffect(() => {\r\n\t\taddListener(key, listener)\r\n\r\n\t\t// Originally, it was removing the listener in the effect's \"clean-up\" function.\r\n\t\t// The reason being, React calls effects multiple times in `<StrictMode/>`,\r\n\t\t// so it should remove any listeners it has added when the effect was triggered.\r\n\t\t//\r\n\t\t// But at the same time, hooks like `useAfterNavigatedToAnotherPage()` aren't possible\r\n\t\t// with such implementation because their listeners would be removed before\r\n\t\t// it has finished mounting the new page because the old page is already unmounted by then.\r\n\t\t//\r\n\t\t// As a workaround, for `useAfterNavigatedToAnotherPage()` hook specifically,\r\n\t\t// its listener isn't removed in the effect's \"clean-up\" function.\r\n\t\t// Instead, adding a listener is \"idempotent\", i.e. can be called multiple times\r\n\t\t// without resulting in duplicates.\r\n\t\t//\r\n\t\t// All listeners get cleaned automatically after a new page has been rendered.\r\n\t\t//\r\n\t\treturn () => {\r\n\t\t\tremoveListener(key, listener)\r\n\t\t}\r\n\t}, [])\r\n}\r\n\r\nconst addListener = (key, listener) => {\r\n\tif (!getFromContext(key)) {\r\n\t\tsetInContext(key, [])\r\n\t}\r\n\t// The adding of a `listener` is \"idempotent\", i.e. calling this function\r\n\t// multiple times with the same argument won't result in duplicates.\r\n\tconst existingListeners = getFromContext(key)\r\n\tif (existingListeners.indexOf(listener) < 0) {\r\n\t\tsetInContext(key, existingListeners.concat([listener]))\r\n\t}\r\n}\r\n\r\nconst removeListener = (key, listener) => {\r\n\tif (getFromContext(key)) {\r\n\t\tsetInContext(key, getFromContext(key).filter(_ => _ !== listener))\r\n\t}\r\n}"],"mappings":";;;;;;AAAA;AAEA;AAEe,SAASA,2BAA2B,OAGhD;EAAA,IAFUC,GAAG,QAAfC,UAAU;IACVC,QAAQ,QAARA,QAAQ;EAER,IAAAC,gBAAS,EAAC,YAAM;IACfC,WAAW,CAACJ,GAAG,EAAEE,QAAQ,CAAC;;IAE1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,YAAM;MACZG,cAAc,CAACL,GAAG,EAAEE,QAAQ,CAAC;IAC9B,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;AACP;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAW,CAAIJ,GAAG,EAAEE,QAAQ,EAAK;EACtC,IAAI,CAAC,IAAAI,uBAAc,EAACN,GAAG,CAAC,EAAE;IACzB,IAAAO,qBAAY,EAACP,GAAG,EAAE,EAAE,CAAC;EACtB;EACA;EACA;EACA,IAAMQ,iBAAiB,GAAG,IAAAF,uBAAc,EAACN,GAAG,CAAC;EAC7C,IAAIQ,iBAAiB,CAACC,OAAO,CAACP,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC5C,IAAAK,qBAAY,EAACP,GAAG,EAAEQ,iBAAiB,CAACE,MAAM,CAAC,CAACR,QAAQ,CAAC,CAAC,CAAC;EACxD;AACD,CAAC;AAED,IAAMG,cAAc,GAAG,SAAjBA,cAAc,CAAIL,GAAG,EAAEE,QAAQ,EAAK;EACzC,IAAI,IAAAI,uBAAc,EAACN,GAAG,CAAC,EAAE;IACxB,IAAAO,qBAAY,EAACP,GAAG,EAAE,IAAAM,uBAAc,EAACN,GAAG,CAAC,CAACW,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,KAAKV,QAAQ;IAAA,EAAC,CAAC;EACnE;AACD,CAAC"}