{"version":3,"file":"RouterContextValueProvider.js","names":["RouterContextValueProvider","location","routes","params","children","getPageDescriptor","path","getRoutePath","initialPage","useMemo","currentPage","useRef","currentPageInstantBack","currentPageNavigationContext","undefined","routerContextValue","value","current","isSamePage","pageDescriptor","instantBack","getFromContext","navigationContext","onNavigatedToAnotherPage","currentPageValue","currentPageInstantBackValue","currentPageNavigationContextValue","prevPage","newPage","route","useCurrentRouteChangeEffect","React","createElement","RouterContext","Provider","routeShape","PropTypes","string","arrayOf","shape","routeType","propTypes","origin","host","hostname","port","protocol","pathname","isRequired","query","objectOf","search","hash","key","state","any","index","number","delta","action","oneOf","node","newPageDescriptor","beforeRenderNewPageListeners","listener","beforeRenderAnotherPageListeners","takeFromContext"],"sources":["../../lib/router/RouterContextValueProvider.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport RouterContext from './RouterContext.js'\r\nimport useCurrentRouteChangeEffect from './useCurrentRouteChangeEffect.js'\r\nimport getRoutePath from './getRoutePath.js'\r\n\r\nimport { getFromContext, takeFromContext } from '../context.js'\r\nimport isSamePage from '../isSamePage.js'\r\n\r\nexport default function RouterContextValueProvider({\r\n\tlocation,\r\n\troutes,\r\n\tparams,\r\n\tchildren\r\n}) {\r\n\t// This value is returned from `useRoute()` hook, so in case of changing this,\r\n\t// also change the value returned from `useRoute()` hook in `useRoute.js`.\r\n\tconst getPageDescriptor = () => ({\r\n\t\tlocation,\r\n\t\tparams,\r\n\t\tpath: getRoutePath(routes)\r\n\t})\r\n\r\n\tconst initialPage = useMemo(() => getPageDescriptor(), [])\r\n\r\n\tconst currentPage = useRef(initialPage)\r\n\tconst currentPageInstantBack = useRef(false)\r\n\tconst currentPageNavigationContext = useRef(undefined)\r\n\r\n\tconst routerContextValue = useRef({\r\n\t\tvalue: initialPage\r\n\t})\r\n\r\n\t// `location` becomes `undefined` every time when router starts `.load()` a new page.\r\n\t// Then it becomes non-`undefined` when the new page is about to be rendered.\r\n\tif (location) {\r\n\t\t// When a new `location` has been navigated to and is about to be rendered.\r\n\t\tif (location !== currentPage.current.location) {\r\n\t\t\t// See if it was a navigation from two different pages\r\n\t\t\t// or whether it was just a change of URL query parameters\r\n\t\t\t// while staying on the same \"page\".\r\n\t\t\t// Only if it didn't stay on the same page should it call any navigation listeners.\r\n\t\t\tif (!isSamePage(location, currentPage.current.location)) {\r\n\t\t\t\tconst pageDescriptor = getPageDescriptor()\r\n\r\n\t\t\t\t// \"Navigation/IsInstantBack\" and \"Navigation/Context\" values that're later used in `useEffect()`\r\n\t\t\t\t// should be snapshotted at this state — at the same stage that the \"new page\" route is snapshotted.\r\n\t\t\t\t// Otherwise, those values might potentially correspond to some other navigation (subsequent)\r\n\t\t\t\t// that happens right after this (current) navigation.\r\n\t\t\t\tconst instantBack = getFromContext('Navigation/IsInstantBack')\r\n\t\t\t\tconst navigationContext = getFromContext('Navigation/Context')\r\n\r\n\t\t\t\t// Store the snapshotted values in `ref`s.\r\n\t\t\t\tcurrentPage.current = pageDescriptor\r\n\t\t\t\tcurrentPageInstantBack.current = instantBack\r\n\t\t\t\tcurrentPageNavigationContext.current = navigationContext\r\n\r\n\t\t\t\t// Update `RouterContext` value.\r\n\t\t\t\trouterContextValue.current = {\r\n\t\t\t\t\tvalue: pageDescriptor\r\n\t\t\t\t}\r\n\r\n\t\t\t\tonNavigatedToAnotherPage(pageDescriptor, {\r\n\t\t\t\t\tinstantBack,\r\n\t\t\t\t\tnavigationContext\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// `currentPageValue` variable is created here — outside of the effect —\r\n\t// to store `currentPage.current` `ref` value.\r\n\t// The reason is that the `ref` value, when referenced from inside `useEffect()` callback,\r\n\t// will always point to the very latest value in that `ref` at not to the `ref` value\r\n\t// that existed at the time of comparing the dependencies of the effect.\r\n\t// In other words, `ref` value inside effect callback might go out of sync with\r\n\t// itself at the time of evaluating the effect's dependencies.\r\n\t//\r\n\t// Using a variable allows \"capturing\" the `ref` value at a certain point in time\r\n\t// and then use that value later when the effect's callback function is run.\r\n\t// This is called \"closure\" in javascript language.\r\n\t//\r\n\t// For example, user navigates from `/items` to `/items/123` and \"new page\" event\r\n\t// is registered here, and `useEffect()` is ready to be run but the user quickly\r\n\t// navigates to `/contacts` page and all the `ref`s now store the values for that\r\n\t// `/contacts` page and not for the `/items/123` page, so the `useEffect()` callback\r\n\t// shouldn't read any values from those `ref`s since those `ref` values may have\r\n\t// already been overwritten.\r\n\t//\r\n\tconst currentPageValue = currentPage.current\r\n\tconst currentPageInstantBackValue = currentPageInstantBack.current\r\n\tconst currentPageNavigationContextValue = currentPageNavigationContext.current\r\n\t//\r\n\tconst prevPage = getFromContext('Root/NewPage')\r\n\tconst newPage = useMemo(() => ({\r\n\t\tlocation: currentPageValue.location,\r\n\t\troute: currentPageValue.path,\r\n\t\tparams: currentPageValue.params,\r\n\t\tinstantBack: currentPageInstantBackValue,\r\n\t\tnavigationContext: currentPageNavigationContextValue\r\n\t}), [currentPageValue])\r\n\r\n\t// If the page has changed, this effect will trigger the relevant listeners.\r\n\tuseCurrentRouteChangeEffect({\r\n\t\tcurrentPage: currentPageValue,\r\n\t\tprevPage,\r\n\t\tnewPage\r\n\t})\r\n\r\n\treturn React.createElement(\r\n\t\tRouterContext.Provider,\r\n\t\t{ value: routerContextValue.current },\r\n\t\tchildren\r\n\t)\r\n}\r\n\r\nconst routeShape = {\r\n\t// A `route` doesn't always have a `path` property:\r\n\t// `found` router allows that when nesting routes.\r\n\t// Example: `{ Component: Wrapper, children: { path: '/', Component: Home } }`.\r\n\tpath: PropTypes.string\r\n}\r\n\r\nrouteShape.children = PropTypes.arrayOf(PropTypes.shape(routeShape))\r\n\r\nconst routeType = PropTypes.shape(routeShape)\r\n\r\nRouterContextValueProvider.propTypes = {\r\n\tlocation: PropTypes.shape({\r\n\t\torigin: PropTypes.string,\r\n\t\thost: PropTypes.string,\r\n\t\thostname: PropTypes.string,\r\n\t\tport: PropTypes.string,\r\n\t\tprotocol: PropTypes.string,\r\n\r\n\t\tpathname: PropTypes.string.isRequired,\r\n\t\tquery: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\t\tsearch: PropTypes.string.isRequired,\r\n\t\thash: PropTypes.string.isRequired,\r\n\r\n\t\t// Miscellaneous (not used).\r\n\r\n\t\t// Some kind of a possibly-likely-unique key. Is empty for the initial page.\r\n\t\tkey: PropTypes.string,\r\n\r\n\t\t// History entry state. Can be empty.\r\n\t\tstate: PropTypes.any,\r\n\r\n\t\t// Index in browser history stack.\r\n\t\t// Seems to be `undefined` during the initial client-side render\r\n\t\t// after the page has been rendered on the server side.\r\n\t\tindex: PropTypes.number,\r\n\r\n\t\t// The \"delta\" in terms of `index` change as a result of the navigation.\r\n\t\t// For example, a regular hyperlink click is `delta: 1`.\r\n\t\t// A \"Back\" action is `delta: -1`. A user could go several pages \"Back\".\r\n\t\tdelta: PropTypes.number,\r\n\r\n\t\t// 'PUSH' or 'REPLACE' if the location was reached via history \"push\" or\r\n    // \"replace\" action respectively. 'POP' on the initial location, or if\r\n\t\t// the location was reached via the browser \"Back\" or \"Forward\" buttons\r\n\t\t// or via `FarceActions.go`.\r\n\t\taction: PropTypes.oneOf(['PUSH', 'REPLACE', 'POP']).isRequired\r\n\t}),\r\n\r\n\troutes: PropTypes.arrayOf(routeType),\r\n\r\n\tparams: PropTypes.objectOf(PropTypes.string),\r\n\r\n\tchildren: PropTypes.node\r\n}\r\n\r\nfunction onNavigatedToAnotherPage(newPageDescriptor, {\r\n\tinstantBack,\r\n\tnavigationContext\r\n}) {\r\n\tconst newPage = {\r\n\t\tlocation: newPageDescriptor.location,\r\n\t\troute: newPageDescriptor.path,\r\n\t\tparams: newPageDescriptor.params,\r\n\t\tinstantBack,\r\n\t\tnavigationContext\r\n\t}\r\n\r\n\tconst prevPage = getFromContext('Root/NewPage')\r\n\r\n\t// Trigger \"before new page will be rendered\" listeners.\r\n\tconst beforeRenderNewPageListeners = getFromContext('Root/BeforeRenderNewPage')\r\n\tif (beforeRenderNewPageListeners) {\r\n\t\tfor (const listener of beforeRenderNewPageListeners) {\r\n\t\t\tlistener(newPage, prevPage)\r\n\t\t}\r\n\t}\r\n\r\n\t// Trigger \"before another page will be rendered\" listeners.\r\n\tconst beforeRenderAnotherPageListeners = takeFromContext('Navigation/BeforeRenderAnotherPage')\r\n\tif (beforeRenderAnotherPageListeners) {\r\n\t\tfor (const listener of beforeRenderAnotherPageListeners) {\r\n\t\t\tlistener(newPage)\r\n\t\t}\r\n\t}\r\n}"],"mappings":"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"}