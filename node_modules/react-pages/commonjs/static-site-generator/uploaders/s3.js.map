{"version":3,"file":"s3.js","names":["S3Uploader","accessKeyId","secretAccessKey","region","bucket","ACL","upload","directory","started","progress","params","localDir","deleteRemoved","s3Params","Bucket","s3Client","s3","createClient","maxAsyncS3","s3RetryCount","s3RetryDelay","multipartUploadThreshold","multipartUploadSize","s3Options","console","log","uploader","uploadDir","initialized","finished","on","progressMd5Total","progressSoFar","progressMd5Amount","Promise","resolve","reject"],"sources":["../../../lib/static-site-generator/uploaders/s3.js"],"sourcesContent":["import s3 from '@auth0/s3'\r\n\r\nexport default function S3Uploader({ accessKeyId, secretAccessKey, region, bucket, ACL })\r\n{\r\n\treturn function upload(directory, { started, progress })\r\n\t{\r\n\t\tconst params =\r\n\t\t{\r\n\t\t\tlocalDir: directory,\r\n\t\t\tdeleteRemoved: true, // default false, whether to remove s3 objects\r\n\t\t\ts3Params:\r\n\t\t\t{\r\n\t\t\t\tACL: ACL,\r\n\t\t\t\tBucket: bucket\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst s3Client = s3.createClient\r\n\t\t({\r\n\t\t\tmaxAsyncS3: 20,     // this is the default\r\n\t\t\ts3RetryCount: 3,    // this is the default\r\n\t\t\ts3RetryDelay: 1000, // this is the default\r\n\t\t\tmultipartUploadThreshold: 20971520, // this is the default (20 MB)\r\n\t\t\tmultipartUploadSize: 15728640, // this is the default (15 MB)\r\n\t\t\ts3Options:\r\n\t\t\t{\r\n\t\t\t\taccessKeyId,\r\n\t\t\t\tsecretAccessKey,\r\n\t\t\t\tregion\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconsole.log()\r\n\t\tconsole.log('(the S3 upload progress bar seems to be buggy, just wait until it exits)')\r\n\t\tconsole.log()\r\n\r\n\t\tconst uploader = s3Client.uploadDir(params)\r\n\r\n\t\tlet initialized = false\r\n\t\tlet finished = false\r\n\r\n\t\tuploader.on('progress', () =>\r\n\t\t{\r\n\t\t\tif (!initialized && uploader.progressMd5Total)\r\n\t\t\t{\r\n\t\t\t\tstarted(uploader.progressMd5Total)\r\n\t\t\t\tinitialized = true\r\n\t\t\t}\r\n\t\t\tif (initialized)\r\n\t\t\t{\r\n\t\t\t\tconst progressSoFar = uploader.progressMd5Amount / uploader.progressMd5Total\r\n\r\n\t\t\t\t// `s3` spams for a lot of `progress` with `1`.\r\n\t\t\t\tif (progressSoFar === 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!finished)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfinished = true\r\n\t\t\t\t\t\tprogress(1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse progress(progressSoFar)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn new Promise((resolve, reject) =>\r\n\t\t{\r\n\t\t\tuploader.on('end', resolve)\r\n\t\t\tuploader.on('error', reject)\r\n\t\t})\r\n\t}\r\n}"],"mappings":";;;;;;AAAA;AAA0B;AAEX,SAASA,UAAU,OAClC;EAAA,IADqCC,WAAW,QAAXA,WAAW;IAAEC,eAAe,QAAfA,eAAe;IAAEC,MAAM,QAANA,MAAM;IAAEC,MAAM,QAANA,MAAM;IAAEC,GAAG,QAAHA,GAAG;EAErF,OAAO,SAASC,MAAM,CAACC,SAAS,SAChC;IAAA,IADoCC,OAAO,SAAPA,OAAO;MAAEC,QAAQ,SAARA,QAAQ;IAEpD,IAAMC,MAAM,GACZ;MACCC,QAAQ,EAAEJ,SAAS;MACnBK,aAAa,EAAE,IAAI;MAAE;MACrBC,QAAQ,EACR;QACCR,GAAG,EAAEA,GAAG;QACRS,MAAM,EAAEV;MACT;IACD,CAAC;IAED,IAAMW,QAAQ,GAAGC,aAAE,CAACC,YAAY,CAC/B;MACAC,UAAU,EAAE,EAAE;MAAM;MACpBC,YAAY,EAAE,CAAC;MAAK;MACpBC,YAAY,EAAE,IAAI;MAAE;MACpBC,wBAAwB,EAAE,QAAQ;MAAE;MACpCC,mBAAmB,EAAE,QAAQ;MAAE;MAC/BC,SAAS,EACT;QACCtB,WAAW,EAAXA,WAAW;QACXC,eAAe,EAAfA,eAAe;QACfC,MAAM,EAANA;MACD;IACD,CAAC,CAAC;IAEFqB,OAAO,CAACC,GAAG,EAAE;IACbD,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;IACvFD,OAAO,CAACC,GAAG,EAAE;IAEb,IAAMC,QAAQ,GAAGX,QAAQ,CAACY,SAAS,CAACjB,MAAM,CAAC;IAE3C,IAAIkB,WAAW,GAAG,KAAK;IACvB,IAAIC,QAAQ,GAAG,KAAK;IAEpBH,QAAQ,CAACI,EAAE,CAAC,UAAU,EAAE,YACxB;MACC,IAAI,CAACF,WAAW,IAAIF,QAAQ,CAACK,gBAAgB,EAC7C;QACCvB,OAAO,CAACkB,QAAQ,CAACK,gBAAgB,CAAC;QAClCH,WAAW,GAAG,IAAI;MACnB;MACA,IAAIA,WAAW,EACf;QACC,IAAMI,aAAa,GAAGN,QAAQ,CAACO,iBAAiB,GAAGP,QAAQ,CAACK,gBAAgB;;QAE5E;QACA,IAAIC,aAAa,KAAK,CAAC,EACvB;UACC,IAAI,CAACH,QAAQ,EACb;YACCA,QAAQ,GAAG,IAAI;YACfpB,QAAQ,CAAC,CAAC,CAAC;UACZ;QACD,CAAC,MACIA,QAAQ,CAACuB,aAAa,CAAC;MAC7B;IACD,CAAC,CAAC;IAEF,OAAO,IAAIE,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EACnC;MACCV,QAAQ,CAACI,EAAE,CAAC,KAAK,EAAEK,OAAO,CAAC;MAC3BT,QAAQ,CAACI,EAAE,CAAC,OAAO,EAAEM,MAAM,CAAC;IAC7B,CAAC,CAAC;EACH,CAAC;AACF"}