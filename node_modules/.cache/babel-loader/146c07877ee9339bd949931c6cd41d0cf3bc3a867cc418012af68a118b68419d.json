{"ast":null,"code":"var _jsxFileName = \"/Users/Freed/Desktop/social/src/UserPage/Explore/assets/ExploreQuote.jsx\";\nimport React from \"react\";\nimport Quote from \"../../../SVG/Quote\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExploreQuote = ({\n  count,\n  artist,\n  artists\n}) => {\n  var _artists$count;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        animationName: artist ? `quote1` : \"\"\n      },\n      children: (_artists$count = artists[count]) === null || _artists$count === void 0 ? void 0 : _artists$count.quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = ExploreQuote;\nexport default ExploreQuote;\nvar _c;\n$RefreshReg$(_c, \"ExploreQuote\");","map":{"version":3,"names":["React","Quote","jsxDEV","_jsxDEV","Fragment","_Fragment","ExploreQuote","count","artist","artists","_artists$count","children","fileName","_jsxFileName","lineNumber","columnNumber","style","animationName","quote","_c","$RefreshReg$"],"sources":["/Users/Freed/Desktop/social/src/UserPage/Explore/assets/ExploreQuote.jsx"],"sourcesContent":["import React from \"react\";\nimport Quote from \"../../../SVG/Quote\";\n\nconst ExploreQuote = ({ count, artist, artists }) => {\n    return (\n        <>\n            <span>\n                <Quote />\n            </span>\n            <p\n                style={{\n                    animationName: artist ? `quote1` : \"\",\n                }}\n            >\n                {artists[count]?.quote}\n            </p>\n        </>\n    );\n};\n\nexport default ExploreQuote;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAA,IAAAC,cAAA;EACjD,oBACIP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAAQ,QAAA,eACIR,OAAA,CAACF,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPZ,OAAA;MACIa,KAAK,EAAE;QACHC,aAAa,EAAET,MAAM,GAAG,QAAQ,GAAG;MACvC,CAAE;MAAAG,QAAA,GAAAD,cAAA,GAEDD,OAAO,CAACF,KAAK,CAAC,cAAAG,cAAA,uBAAdA,cAAA,CAAgBQ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA,eACN,CAAC;AAEX,CAAC;AAACI,EAAA,GAfIb,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}